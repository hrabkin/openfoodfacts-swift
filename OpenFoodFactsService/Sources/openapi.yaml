openapi: 3.1.0
info:
  title: OpenFoodFactsOpenAPI
  description: 'As a developer, the Open Food Facts API allows you to get information

    and contribute to the products database. You can create great apps to

    help people make better food choices and also provide data to enhance the database.

    '
  termsOfService: https://world.openfoodfacts.org/terms-of-use
  contact:
    name: Open Food Facts
    url: https://slack.openfoodfacts.org/
    email: reuse@openfoodfacts.org
  license:
    name: 'data: ODbL'
    url: https://opendatacommons.org/licenses/odbl/summary/index.html
    x-identifier: ODbL-1.0
  version: '2'
externalDocs:
  description: 'Please read the API introduction before using this API.

    '
  url: https://openfoodfacts.github.io/openfoodfacts-server/api/
servers:
- description: dev
  url: https://world.openfoodfacts.net
- url: https://world.openfoodfacts.org
  description: prod
paths:
  /api/v2/product/{barcode}:
    get:
      tags:
      - Read Requests
      summary: Get information for a specific product by barcode
      parameters:
      - name: barcode
        in: path
        description: 'The barcode of the product to be fetched

          '
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '3017620422003'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_product_by_barcode'
              examples:
                spread-example:
                  summary: retrieved values for a well known chocolate and nut spread
                  value:
                    code: '3017620422003'
                    product:
                      _id: '3017620422003'
                      _keywords:
                      - et
                      - pate
                      - cacao
                      - produit
                      - ferrero
                      - gluten
                      - petit-dejeuner
                      - san
                      - au
                      - aux
                      - sucre
                      - nutella
                      abbreviated_product_name: Nutella t.400
                      abbreviated_product_name_fr: Nutella t.400
                      added_countries_tags: []
                      additives_n: 1
                      additives_original_tags:
                      - en:e322
                      additives_prev_original_tags:
                      - en:e322
                      additives_tags:
                      - en:e322
                      allergens: en:milk,en:nuts,en:soybeans
                      allergens_from_ingredients: en:nuts, hazelnuts
                      allergens_from_user: (fr) en:milk,en:nuts,en:soybeans
                      allergens_hierarchy:
                      - en:milk
                      - en:nuts
                      - en:soybeans
                      allergens_lc: fr
                      allergens_tags:
                      - en:milk
                      - en:nuts
                      - en:soybeans
                      amino_acids_prev_tags: []
                      amino_acids_tags: []
                      brands: Ferrero
                      brands_tags:
                      - ferrero
                      carbon_footprint_percent_of_known_ingredients: 13
                      categories: "Produits \xE0 tartiner,Petit-d\xE9jeuners,Produits\
                        \ \xE0 tartiner sucr\xE9s,P\xE2tes \xE0 tartiner,P\xE2tes\
                        \ \xE0 tartiner aux noisettes,P\xE2tes \xE0 tartiner aux noisettes\
                        \ et au cacao"
                      categories_hierarchy:
                      - en:breakfasts
                      - en:spreads
                      - en:sweet-spreads
                      - en:hazelnut-spreads
                      - en:chocolate-spreads
                      - en:cocoa-and-hazelnuts-spreads
                      categories_lc: fr
                      categories_properties:
                        agribalyse_food_code:en: '31032'
                        agribalyse_proxy_food_code:en: '31032'
                        ciqual_food_code:en: '31032'
                      categories_properties_tags:
                      - all-products
                      - categories-known
                      - agribalyse-food-code-31032
                      - agribalyse-food-code-known
                      - agribalyse-proxy-food-code-31032
                      - agribalyse-proxy-food-code-known
                      - ciqual-food-code-31032
                      - ciqual-food-code-known
                      - agribalyse-known
                      - agribalyse-31032
                      categories_tags:
                      - en:breakfasts
                      - en:spreads
                      - en:sweet-spreads
                      - fr:pates-a-tartiner
                      - en:hazelnut-spreads
                      - en:chocolate-spreads
                      - en:cocoa-and-hazelnuts-spreads
                      category_properties:
                        ciqual_food_name:en: Chocolate spread with hazelnuts
                      checked: 'on'
                      checkers_tags:
                      - moon-rabbit
                      ciqual_food_name_tags:
                      - chocolate-spread-with-hazelnuts
                      cities_tags: []
                      code: '3017620422003'
                      codes_tags:
                      - code-13
                      - 3017620422xxx
                      - 301762042xxxx
                      - 30176204xxxxx
                      - 3017620xxxxxx
                      - 301762xxxxxxx
                      - 30176xxxxxxxx
                      - 3017xxxxxxxxx
                      - 301xxxxxxxxxx
                      - 30xxxxxxxxxxx
                      - 3xxxxxxxxxxxx
                      compared_to_category: en:cocoa-and-hazelnuts-spreads
                      complete: 0
                      completeness: 0.875
                      conservation_conditions: "A conserver au sec et \xE0 l'abri\
                        \ de la chaleur. Ne pas mettre au r\xE9frig\xE9rateur."
                      conservation_conditions_fr: "A conserver au sec et \xE0 l'abri\
                        \ de la chaleur. Ne pas mettre au r\xE9frig\xE9rateur."
                      correctors_tags:
                      - user1
                      - user2
                      - user3
                      - user4
                      countries: en:Algeria  Austria  Belgium  Canada  France  Germany  Italy  Luxembourg  Mexico  Morocco  Netherlands  Portugal  Senegal  Spain  Switzerland  Tunisia  United
                        Kingdom  United States
                      countries_beforescanbot: Belgium,France
                      countries_hierarchy:
                      - en:Algeria  Austria  Belgium  Canada  France  Germany  Italy  Luxembourg  Mexico  Morocco  Netherlands  Portugal  Senegal  Spain  Switzerland  Tunisia  United
                        Kingdom  United States
                      countries_lc: fr
                      countries_tags:
                      - en:algeria-austria-belgium-canada-france-germany-italy-luxembourg-mexico-morocco-netherlands-portugal-senegal-spain-switzerland-tunisia-united-kingdom-united-states
                      created_t: 1457680652
                      creator: openfoodfacts-contributors
                      customer_service: FERRERO FRANCE COMMERCIALE - Service Consommateurs,
                        CS 90058 - 76136 MONT SAINT AIGNAN Cedex
                      customer_service_fr: FERRERO FRANCE COMMERCIALE - Service Consommateurs,
                        CS 90058 - 76136 MONT SAINT AIGNAN Cedex
                      data_quality_bugs_tags: []
                      data_quality_errors_tags: []
                      data_quality_info_tags:
                      - en:packaging-data-incomplete
                      - en:ingredients-percent-analysis-ok
                      - en:ecoscore-extended-data-computed
                      - en:ecoscore-extended-data-less-precise-than-agribalyse
                      - en:food-groups-1-known
                      - en:food-groups-2-known
                      - en:food-groups-3-unknown
                      data_quality_tags:
                      - en:packaging-data-incomplete
                      - en:ingredients-percent-analysis-ok
                      - en:ecoscore-extended-data-computed
                      - en:ecoscore-extended-data-less-precise-than-agribalyse
                      - en:food-groups-1-known
                      - en:food-groups-2-known
                      - en:food-groups-3-unknown
                      - en:ecoscore-origins-of-ingredients-origins-are-100-percent-unknown
                      - en:ecoscore-packaging-unspecified-shape
                      - en:ecoscore-production-system-no-label
                      data_quality_warnings_tags:
                      - en:ecoscore-origins-of-ingredients-origins-are-100-percent-unknown
                      - en:ecoscore-packaging-unspecified-shape
                      - en:ecoscore-production-system-no-label
                      data_sources: Database - FoodRepo / openfood.ch, Databases,
                        Producer - Ferrero, Producers, App - yuka, Apps, Producer
                        - ferrero-france-commerciale, Database - Equadis, Database
                        - GDSN, App - InFood, App - Open Food Facts, App - halal-healthy,
                        App - smoothie-openfoodfacts
                      data_sources_tags:
                      - database-foodrepo-openfood-ch
                      - databases
                      - producer-ferrero
                      - producers
                      - app-yuka
                      - apps
                      - producer-ferrero-france-commerciale
                      - database-equadis
                      - database-gdsn
                      - app-infood
                      - app-open-food-facts
                      - app-halal-healthy
                      - app-smoothie-openfoodfacts
                      ecoscore_data:
                        adjustments:
                          origins_of_ingredients:
                            aggregated_origins:
                            - origin: en:unknown
                              percent: 100
                            epi_score: 0
                            epi_value: -5
                            origins_from_origins_field:
                            - en:unknown
                            transportation_scores:
                              fr: 0
                              'no': 0
                              uk: 0
                              us: 0
                              world: 0
                            transportation_values:
                              fr: 0
                              'no': 0
                              uk: 0
                              us: 0
                              world: 0
                            values:
                              fr: -5
                              'no': -5
                              uk: -5
                              us: -5
                              world: -5
                            warning: origins_are_100_percent_unknown
                          packaging:
                            non_recyclable_and_non_biodegradable_materials: 0
                            packagings:
                            - ecoscore_material_score: 81
                              ecoscore_shape_ratio: 1
                              material: en:clear-glass
                              shape: en:unknown
                            score: 81
                            value: -2
                            warning: unspecified_shape
                          production_system:
                            labels: []
                            value: 0
                            warning: no_label
                          threatened_species:
                            ingredient: en:palm-oil
                            value: -10
                        agribalyse:
                          agribalyse_food_code: '31032'
                          co2_agriculture: 8.7770996
                          co2_consumption: 0
                          co2_distribution: 0.014104999
                          co2_packaging: 0.18864842
                          co2_processing: 0.69167973
                          co2_total: 9.8742343
                          co2_transportation: 0.19708507
                          code: '31032'
                          dqr: '2.54'
                          ef_agriculture: 0.61477708
                          ef_consumption: 0
                          ef_distribution: 0.0045906531
                          ef_packaging: 0.020453714
                          ef_processing: 0.085674643
                          ef_total: 0.74366703
                          ef_transportation: 0.017824104
                          is_beverage: 0
                          name_en: Chocolate spread with hazelnuts
                          name_fr: "P\xE2te \xE0 tartiner chocolat et noisette"
                          score: 40
                        grade: d
                        grades:
                          fr: d
                          'no': d
                          uk: d
                          us: d
                          world: d
                        missing:
                          labels: 1
                          origins: 1
                          packagings: 1
                        missing_data_warning: 1
                        score: 23
                        scores:
                          fr: 23
                          'no': 23
                          uk: 23
                          us: 23
                          world: 23
                        status: known
                      ecoscore_extended_data:
                        impact:
                          ef_single_score_log_stddev: 0.0539895633164057
                          likeliest_impacts:
                            Climate_change: 0.172717449218484
                            EF_single_score: 0.023255035815491
                          likeliest_recipe:
                            en:emulsifier: 0.388589430098073
                            en:hazelnut_oil: 12.806852015349
                            en:palm_oil: 16.6103749736231
                            en:sugar: 52.9709312507153
                            en:water: 4.90093151221936
                            fr:Cacao_Maigre_7: 3.94056985087663
                            fr:Lait__cr_m__En_Poudre_8: 6.8959972390341
                          mass_ratio_uncharacterized: 0.11
                          uncharacterized_ingredients:
                            impact:
                            - "fr:Lait \xC9cr\xE9m\xE9 En Poudre 8"
                            - fr:Cacao Maigre 7
                            nutrition:
                            - "fr:Lait \xC9cr\xE9m\xE9 En Poudre 8"
                            - fr:Cacao Maigre 7
                          uncharacterized_ingredients_mass_proportion:
                            impact: 0.11
                            nutrition: 0.11
                          uncharacterized_ingredients_ratio:
                            impact: 0.333333333333333
                            nutrition: 0.333333333333333
                          warnings:
                          - 'The product has a high number of nutrition uncharacterized
                            ingredients: 33%'
                          - 'The product has a high number of impact uncharacterized
                            ingredients: 33%'
                          - 'The estimated mass of nutrition uncharacterized ingredients
                            in the product is high: 11%'
                          - 'The estimated mass of impact uncharacterized ingredients
                            in the product is high: 11%'
                      ecoscore_extended_data_version: '4'
                      ecoscore_grade: d
                      ecoscore_score: 23
                      ecoscore_tags:
                      - d
                      editors_tags:
                      - user1
                      - user2
                      - user3
                      - user4
                      emb_codes: ''
                      emb_codes_20141016: ''
                      emb_codes_orig: ''
                      emb_codes_tags: []
                      entry_dates_tags:
                      - '2016-03-11'
                      - 2016-03
                      - '2016'
                      environment_impact_level: ''
                      environment_impact_level_tags: []
                      expiration_date: 09/2021
                      food_groups: en:sweets
                      food_groups_tags:
                      - en:sugary-snacks
                      - en:sweets
                      fruits-vegetables-nuts_100g_estimate: 0
                      generic_name: ''
                      generic_name_ar: "\u0646\u0648\u062A\u0644\u0627"
                      generic_name_de: Nuss-Nougat-Creme
                      generic_name_en: ''
                      generic_name_es: Crema de Avellanas con cacao
                      generic_name_fr: "P\xE2te \xE0 tartiner aux noisettes"
                      generic_name_id: ''
                      generic_name_it: Nutella
                      generic_name_nl: ''
                      grades: {}
                      id: '3017620422003'
                      image_front_small_url: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.200.jpg
                      image_front_thumb_url: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.100.jpg
                      image_front_url: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.400.jpg
                      image_nutrition_small_url: https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.200.jpg
                      image_nutrition_thumb_url: https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.100.jpg
                      image_nutrition_url: https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.400.jpg
                      image_small_url: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.200.jpg
                      image_thumb_url: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.100.jpg
                      image_url: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.400.jpg
                      images:
                        '1':
                          sizes:
                            '100':
                              h: 100
                              w: 56
                            '400':
                              h: 400
                              w: 225
                            full:
                              h: 2000
                              w: 1125
                          uploaded_t: '1457680652'
                          uploader: openfoodfacts-contributors
                        '2':
                          sizes:
                            '100':
                              h: 100
                              w: 75
                            '400':
                              h: 400
                              w: 300
                            full:
                              h: 3264
                              w: 2448
                          uploaded_t: '1462829284'
                          uploader: openfoodfacts-contributors
                        '3':
                          sizes:
                            '100':
                              h: 100
                              w: 56
                            '400':
                              h: 400
                              w: 225
                            full:
                              h: 2000
                              w: 1125
                          uploaded_t: '1468510986'
                          uploader: user3
                        front_en:
                          angle: '0'
                          coordinates_image_size: full
                          geometry: 0x0-0-0
                          imgid: '1'
                          normalize: 'false'
                          rev: '399'
                          sizes:
                            '100':
                              h: 100
                              w: 77
                            '200':
                              h: 200
                              w: 155
                            '400':
                              h: 400
                              w: 310
                            full:
                              h: 1808
                              w: 1400
                          white_magic: 'false'
                          x1: '0'
                          x2: '0'
                          y1: '0'
                          y2: '0'
                        front_fr:
                          angle: 0
                          coordinates_image_size: '400'
                          geometry: 0x0--5--5
                          imgid: '2'
                          normalize: 'false'
                          rev: '415'
                          sizes:
                            '100':
                              h: 100
                              w: 77
                            '200':
                              h: 200
                              w: 155
                            '400':
                              h: 400
                              w: 310
                            full:
                              h: 1808
                              w: 1400
                          white_magic: 'false'
                          x1: '-1'
                          x2: '-1'
                          y1: '-1'
                          y2: '-1'
                        ingredients_fr:
                          angle: null
                          coordinates_image_size: '400'
                          geometry: 0x0-0-0
                          imgid: '3'
                          normalize: null
                          rev: '299'
                          sizes:
                            '100':
                              h: 16
                              w: 100
                            '200':
                              h: 33
                              w: 200
                            '400':
                              h: 65
                              w: 400
                            full:
                              h: 334
                              w: 2046
                          white_magic: null
                          x1: null
                          x2: null
                          y1: null
                          y2: null
                        nutrition_en:
                          angle: '0'
                          coordinates_image_size: full
                          geometry: 0x0-0-0
                          imgid: '3'
                          normalize: 'false'
                          rev: '400'
                          sizes:
                            '100':
                              h: 100
                              w: 96
                            '200':
                              h: 200
                              w: 192
                            '400':
                              h: 400
                              w: 383
                            full:
                              h: 572
                              w: 548
                          white_magic: 'false'
                          x1: '0'
                          x2: '0'
                          y1: '0'
                          y2: '0'
                        packaging_fr:
                          angle: 0
                          coordinates_image_size: full
                          geometry: 0x0--1--1
                          imgid: '3'
                          normalize: null
                          rev: '420'
                          sizes:
                            '100':
                              h: 31
                              w: 100
                            '200':
                              h: 61
                              w: 200
                            '400':
                              h: 122
                              w: 400
                            full:
                              h: 638
                              w: 2084
                          white_magic: null
                          x1: '-1'
                          x2: '-1'
                          y1: '-1'
                          y2: '-1'
                      informers_tags:
                      - user1
                      - user2
                      - user3
                      - user4
                      ingredients:
                      - id: en:sugar
                        percent_estimate: 46.5
                        percent_max: 63
                        percent_min: 30
                        text: sugar
                        vegan: 'yes'
                        vegetarian: 'yes'
                      - from_palm_oil: 'yes'
                        id: en:palm-oil
                        percent_estimate: 25.5
                        percent_max: 38
                        percent_min: 13
                        text: palm oil
                        vegan: 'yes'
                        vegetarian: 'yes'
                      - id: en:hazelnut
                        percent: 13
                        percent_estimate: 13
                        percent_max: 13
                        percent_min: 13
                        text: hazelnuts
                        vegan: 'yes'
                        vegetarian: 'yes'
                      - id: en:skim-milk-powder-8
                        percent: 7
                        percent_estimate: 7
                        percent_max: 7
                        percent_min: 7
                        text: skim milk powder 8
                      - id: en:lean-cocoa-7
                        percent: 4
                        percent_estimate: 4
                        percent_max: 4
                        percent_min: 4
                        text: lean cocoa 7
                      - id: en:emulsifier
                        ingredients:
                        - id: en:soya-lecithin
                          percent_estimate: 2
                          percent_max: 4
                          percent_min: 0
                          text: soy lecithins
                          vegan: 'yes'
                          vegetarian: 'yes'
                        percent_estimate: 2
                        percent_max: 4
                        percent_min: 0
                        text: emulsifiers
                      - id: en:vanillin
                        percent_estimate: 2
                        percent_max: 4
                        percent_min: 0
                        text: vanillin
                      ingredients_analysis:
                        en:palm-oil:
                        - en:palm-oil
                        en:vegan-status-unknown:
                        - en:skim-milk-powder-8
                        - en:lean-cocoa-7
                        - en:vanillin
                        en:vegetarian-status-unknown:
                        - en:skim-milk-powder-8
                        - en:lean-cocoa-7
                        - en:vanillin
                      ingredients_analysis_tags:
                      - en:palm-oil
                      - en:vegan-status-unknown
                      - en:vegetarian-status-unknown
                      ingredients_from_or_that_may_be_from_palm_oil_n: 0
                      ingredients_from_palm_oil_n: 0
                      ingredients_from_palm_oil_tags: []
                      ingredients_hierarchy:
                      - en:sugar
                      - en:added-sugar
                      - en:disaccharide
                      - en:palm-oil
                      - en:oil-and-fat
                      - en:vegetable-oil-and-fat
                      - en:palm-oil-and-fat
                      - en:hazelnut
                      - en:nut
                      - en:tree-nut
                      - en:skim-milk-powder-8
                      - en:lean-cocoa-7
                      - en:emulsifier
                      - en:vanillin
                      - en:soya-lecithin
                      - en:e322
                      - en:e322i
                      ingredients_n: 8
                      ingredients_n_tags:
                      - '8'
                      - 1-10
                      ingredients_original_tags:
                      - en:sugar
                      - en:palm-oil
                      - en:hazelnut
                      - en:skim-milk-powder-8
                      - en:lean-cocoa-7
                      - en:emulsifier
                      - en:vanillin
                      - en:soya-lecithin
                      ingredients_percent_analysis: 1
                      ingredients_tags:
                      - en:sugar
                      - en:added-sugar
                      - en:disaccharide
                      - en:palm-oil
                      - en:oil-and-fat
                      - en:vegetable-oil-and-fat
                      - en:palm-oil-and-fat
                      - en:hazelnut
                      - en:nut
                      - en:tree-nut
                      - en:skim-milk-powder-8
                      - en:lean-cocoa-7
                      - en:emulsifier
                      - en:vanillin
                      - en:soya-lecithin
                      - en:e322
                      - en:e322i
                      ingredients_text: 'sugar, palm oil,  hazelnuts 13%, skim milk
                        powder 8, 7%, lean cocoa 7, 4%, emulsifiers: soy lecithins,
                        vanillin'
                      ingredients_text_en: 'sugar, palm oil,  hazelnuts 13%, skim
                        milk powder 8, 7%, lean cocoa 7, 4%, emulsifiers: soy lecithins,
                        vanillin'
                      ingredients_text_fr: "Sucre, huile de palme, _NOISETTES_ 13%,\
                        \ _LAIT_ \xE9cr\xE9m\xE9 en poudre 8,7%, cacao maigre 7,4%,\
                        \ \xE9mulsifiants: l\xE9cithine [SOJA]; vanilline. Sans gluten"
                      ingredients_text_with_allergens: 'sugar, palm oil,  <span class="allergen">hazelnuts</span>
                        13%, skim milk powder 8, 7%, lean cocoa 7, 4%, emulsifiers:
                        soy lecithins, vanillin'
                      ingredients_text_with_allergens_en: 'sugar, palm oil,  <span
                        class="allergen">hazelnuts</span> 13%, skim milk powder 8,
                        7%, lean cocoa 7, 4%, emulsifiers: soy lecithins, vanillin'
                      ingredients_text_with_allergens_fr: "Sucre, huile de palme,\
                        \ <span class=\"allergen\">NOISETTES</span> 13%, <span class=\"\
                        allergen\">LAIT</span> \xE9cr\xE9m\xE9 en poudre 8,7%, cacao\
                        \ maigre 7,4%, \xE9mulsifiants: l\xE9cithine [<span class=\"\
                        allergen\">SOJA</span>]; vanilline. Sans gluten"
                      ingredients_that_may_be_from_palm_oil_n: 0
                      ingredients_that_may_be_from_palm_oil_tags: []
                      ingredients_with_specified_percent_n: 3
                      ingredients_with_specified_percent_sum: 24
                      ingredients_with_unspecified_percent_n: 4
                      ingredients_with_unspecified_percent_sum: 76
                      interface_version_created: '20120622'
                      interface_version_modified: 20150316.jqm2
                      known_ingredients_n: 15
                      labels: Sans gluten,en:nonorganic
                      labels_hierarchy:
                      - en:no-gluten
                      - en:nonorganic
                      labels_lc: fr
                      labels_tags:
                      - en:no-gluten
                      - en:nonorganic
                      lang: en
                      languages:
                        en:arabic: 2
                        en:english: 4
                        en:french: 10
                        en:german: 3
                        en:italian: 3
                        en:spanish: 7
                      languages_codes:
                        en: 4
                        fr: 10
                      languages_hierarchy:
                      - en:english
                      - en:french
                      languages_tags:
                      - en:english
                      - en:french
                      - en:multilingual
                      last_check_dates_tags:
                      - '2021-07-21'
                      - 2021-07
                      - '2021'
                      last_checked_t: 1626872806
                      last_checker: user3
                      last_edit_dates_tags:
                      - '2022-07-29'
                      - 2022-07
                      - '2022'
                      last_editor: user4
                      last_image_dates_tags:
                      - '2022-07-29'
                      - 2022-07
                      - '2022'
                      last_image_t: 1659084293
                      last_modified_by: user4
                      last_modified_t: 1659084329
                      lc: en
                      link: ''
                      main_countries_tags: []
                      manufacturing_places: ''
                      manufacturing_places_tags: []
                      max_imgid: '121'
                      minerals_prev_tags: []
                      minerals_tags: []
                      misc_tags:
                      - en:nutrition-no-fiber
                      - en:nutrition-fruits-vegetables-nuts-estimate-from-ingredients
                      - en:nutrition-no-fiber-or-fruits-vegetables-nuts
                      - en:nutriscore-computed
                      - en:ecoscore-extended-data-computed
                      - en:ecoscore-extended-data-version-4
                      - en:ecoscore-missing-data-warning
                      - en:ecoscore-missing-data-labels
                      - en:ecoscore-missing-data-origins
                      - en:ecoscore-missing-data-packagings
                      - en:ecoscore-computed
                      no_nutrition_data: 'null'
                      nova_group: 4
                      nova_groups: '4'
                      nova_groups_markers:
                        '3':
                        - - ingredients
                          - en:sugar
                        '4':
                        - - additives
                          - en:e322
                        - - ingredients
                          - en:emulsifier
                      nova_groups_tags:
                      - en:4-ultra-processed-food-and-drink-products
                      nucleotides_prev_tags: []
                      nucleotides_tags: []
                      nutrient_levels:
                        fat: high
                        salt: low
                        saturated-fat: high
                        sugars: high
                      nutrient_levels_tags:
                      - en:fat-in-high-quantity
                      - en:saturated-fat-in-high-quantity
                      - en:sugars-in-high-quantity
                      - en:salt-in-low-quantity
                      nutriments:
                        alcohol: 0
                        alcohol_100g: 0
                        alcohol_serving: 0
                        alcohol_unit: '% vol'
                        alcohol_value: 0
                        carbohydrates: 57.5
                        carbohydrates_100g: 57.5
                        carbohydrates_serving: 8.62
                        carbohydrates_unit: g
                        carbohydrates_value: 57.5
                        carbon-footprint-from-known-ingredients_product: 135
                        carbon-footprint-from-known-ingredients_serving: 5.07
                        energy: 2252
                        energy-kcal: 539
                        energy-kcal_100g: 539
                        energy-kcal_serving: 80.8
                        energy-kcal_unit: kcal
                        energy-kcal_value: 539
                        energy-kj: 2252
                        energy-kj_100g: 2252
                        energy-kj_serving: 338
                        energy-kj_unit: kJ
                        energy-kj_value: 2252
                        energy_100g: 2252
                        energy_serving: 338
                        energy_unit: kJ
                        energy_value: 2252
                        fat: 30.9
                        fat_100g: 30.9
                        fat_serving: 4.63
                        fat_unit: g
                        fat_value: 30.9
                        fruits-vegetables-nuts-estimate-from-ingredients_100g: 13
                        fruits-vegetables-nuts-estimate-from-ingredients_serving: 13
                        nova-group: 4
                        nova-group_100g: 4
                        nova-group_serving: 4
                        nutrition-score-fr: 26
                        nutrition-score-fr_100g: 26
                        proteins: 6.3
                        proteins_100g: 6.3
                        proteins_serving: 0.945
                        proteins_unit: g
                        proteins_value: 6.3
                        salt: 0.107
                        salt_100g: 0.107
                        salt_serving: 0.016
                        salt_unit: g
                        salt_value: 0.107
                        saturated-fat: 10.6
                        saturated-fat_100g: 10.6
                        saturated-fat_serving: 1.59
                        saturated-fat_unit: g
                        saturated-fat_value: 10.6
                        sodium: 0.0428
                        sodium_100g: 0.0428
                        sodium_serving: 0.00642
                        sodium_unit: g
                        sodium_value: 0.0428
                        sugars: 56.3
                        sugars_100g: 56.3
                        sugars_serving: 8.44
                        sugars_unit: g
                        sugars_value: 56.3
                      nutriscore_data:
                        energy: 2252
                        energy_points: 6
                        energy_value: 2252
                        fiber: 0
                        fiber_points: 0
                        fiber_value: 0
                        fruits_vegetables_nuts_colza_walnut_olive_oils: 13
                        fruits_vegetables_nuts_colza_walnut_olive_oils_points: 0
                        fruits_vegetables_nuts_colza_walnut_olive_oils_value: 13
                        grade: e
                        is_beverage: 0
                        is_cheese: 0
                        is_fat: 0
                        is_water: 0
                        negative_points: 26
                        positive_points: 0
                        proteins: 6.3
                        proteins_points: 3
                        proteins_value: 6.3
                        saturated_fat: 10.6
                        saturated_fat_points: 10
                        saturated_fat_ratio: 34.3042071197411
                        saturated_fat_ratio_points: 5
                        saturated_fat_ratio_value: 34.3
                        saturated_fat_value: 10.6
                        score: 26
                        sodium: 42.8
                        sodium_points: 0
                        sodium_value: 42.8
                        sugars: 56.3
                        sugars_points: 10
                        sugars_value: 56.3
                      nutriscore_grade: e
                      nutriscore_score: 26
                      nutriscore_score_opposite: -26
                      nutrition_data: 'on'
                      nutrition_data_per: 100g
                      nutrition_data_prepared: ''
                      nutrition_data_prepared_per: 100g
                      nutrition_grade_fr: e
                      nutrition_grades: e
                      nutrition_grades_tags:
                      - e
                      nutrition_score_beverage: 0
                      nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients: 1
                      nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value: 13
                      nutrition_score_warning_no_fiber: 1
                      obsolete: ''
                      obsolete_since_date: ''
                      origin: ''
                      origins: ''
                      origins_hierarchy: []
                      origins_lc: fr
                      origins_tags: []
                      other_nutritional_substances_tags: []
                      owner: org-ferrero-france-commerciale
                      owners_tags: org-ferrero-france-commerciale
                      packaging: PP 5 Ummi PLASTIQUE / PLASTIEK PAP 27 WWW PAPIER
                        / PAPIER CIPAP 82 PANNEAU DE FIBRE COMPOSITES/ COMPOSIET VEZELPLAAT
                        GL 70 VERRE / GLAS
                      packaging_hierarchy:
                      - fr:PP 5 Ummi PLASTIQUE / PLASTIEK PAP 27 WWW PAPIER / PAPIER
                        CIPAP 82 PANNEAU DE FIBRE COMPOSITES/ COMPOSIET VEZELPLAAT
                        GL 70 VERRE / GLAS
                      packaging_lc: fr
                      packaging_tags:
                      - fr:pp-5-ummi-plastique-plastiek-pap-27-www-papier-papier-cipap-82-panneau-de-fibre-composites-composiet-vezelplaat-gl-70-verre-glas
                      packaging_text: ''
                      packaging_text_ar: ''
                      packaging_text_de: ''
                      packaging_text_en: ''
                      packaging_text_es: Pot en verre, couvercle en plastique.
                      packaging_text_fr: "1 couvercle plastique blanc opaque PP \xE0\
                        \ jeter,\r\n1 plaque en carton PAP 21 \xE0 recycler,\r\n1\
                        \ opercule en carton C/PAP 82 \xE0 recycler,\r\n1 pot en verre\
                        \ \xE0 recycler"
                      packaging_text_id: ''
                      packaging_text_it: ''
                      packaging_text_nl: ''
                      packagings:
                      - material: en:clear-glass
                      photographers_tags:
                      - user1
                      - user2
                      - user3
                      - user4
                      pnns_groups_1: Sugary snacks
                      pnns_groups_1_tags:
                      - sugary-snacks
                      - known
                      pnns_groups_2: Sweets
                      pnns_groups_2_tags:
                      - sweets
                      - known
                      popularity_key: 20999992556
                      popularity_tags:
                      - top-10-scans-2021
                      - top-50-scans-2021
                      - top-100-scans-2021
                      - top-500-scans-2021
                      - top-1000-scans-2021
                      - top-5000-scans-2021
                      - top-10000-scans-2021
                      - top-50000-scans-2021
                      - top-100000-scans-2021
                      - top-10-fr-scans-2021
                      - top-50-fr-scans-2021
                      - top-100-fr-scans-2021
                      - top-500-fr-scans-2021
                      - top-1000-fr-scans-2021
                      - top-5000-fr-scans-2021
                      - top-10000-fr-scans-2021
                      - top-50000-fr-scans-2021
                      - top-100000-fr-scans-2021
                      - top-country-fr-scans-2021
                      - at-least-5-fr-scans-2021
                      - at-least-10-fr-scans-2021
                      product_name: Nutella
                      product_name_ar: "\u0646\u0648\u062A\u064A\u0644\u0627"
                      product_name_de: Nutella
                      product_name_en: Nutella
                      product_name_es: Nutella
                      product_name_fr: "P\xE2te \xE0 tartiner Nutella noisettes et\
                        \ cacao - 400g"
                      product_name_id: ''
                      product_name_it: Nutella
                      product_name_nl: ''
                      product_quantity: '400'
                      purchase_places: F - 77480 Mousseaux les Bray  France
                      purchase_places_tags:
                      - f-77480-mousseaux-les-bray-france
                      quantity: 400g
                      removed_countries_tags: []
                      rev: 421
                      scans_n: 3713
                      scores: {}
                      selected_images:
                        front:
                          display:
                            en: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.400.jpg
                            fr: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_fr.415.400.jpg
                          small:
                            en: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.200.jpg
                            fr: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_fr.415.200.jpg
                          thumb:
                            en: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_en.399.100.jpg
                            fr: https://images.openfoodfacts.org/images/products/301/762/042/2003/front_fr.415.100.jpg
                        ingredients:
                          display:
                            fr: https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_fr.299.400.jpg
                          small:
                            fr: https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_fr.299.200.jpg
                          thumb:
                            fr: https://images.openfoodfacts.org/images/products/301/762/042/2003/ingredients_fr.299.100.jpg
                        nutrition:
                          display:
                            en: https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.400.jpg
                          small:
                            en: https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.200.jpg
                          thumb:
                            en: https://images.openfoodfacts.org/images/products/301/762/042/2003/nutrition_en.400.100.jpg
                        packaging:
                          display:
                            fr: https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_fr.420.400.jpg
                          small:
                            fr: https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_fr.420.200.jpg
                          thumb:
                            fr: https://images.openfoodfacts.org/images/products/301/762/042/2003/packaging_fr.420.100.jpg
                      serving_quantity: '15'
                      serving_size: 15g
                      sortkey: 1610877517
                      sources:
                      - fields:
                        - product_name_de
                        - product_name_it
                        - brands
                        - countries
                        id: openfood-ch
                        images: []
                        import_t: 1548767279
                        manufacturer: '0'
                        name: FoodRepo
                        source_licence: Creative Commons Attribution 4.0 International
                          License
                        source_licence_url: https://creativecommons.org/licenses/by/4.0/
                        url: https://www.foodrepo.org/ch/products/19413
                      - fields:
                        - packaging
                        - ingredients_text_fr
                        id: ferrero
                        images: []
                        import_t: 1552318840
                        manufacturer: '1'
                        name: Ferrero
                        url: https://www.ferrero.fr
                      sources_fields:
                        org-gs1:
                          gln: '3010176200101'
                          gpcCategoryCode: '10000187'
                          gpcCategoryName: "P\xE2tes \xE0 Tartiner Sucr\xE9es (Longue\
                            \ Conservation)"
                          isAllergenRelevantDataProvided: 'true'
                          lastChangeDateTime: '2022-07-13T16:01:41+02:00'
                          partyName: FERRERO FRANCE COMMERCIALE
                          productionVariantDescription: '2014'
                          publicationDateTime: '2022-07-13T16:01:41+02:00'
                      states: en:to-be-completed, en:nutrition-facts-completed, en:ingredients-completed,
                        en:expiration-date-completed, en:packaging-code-to-be-completed,
                        en:characteristics-to-be-completed, en:origins-to-be-completed,
                        en:categories-completed, en:brands-completed, en:packaging-completed,
                        en:quantity-completed, en:product-name-completed, en:photos-to-be-validated,
                        en:packaging-photo-to-be-selected, en:nutrition-photo-selected,
                        en:ingredients-photo-to-be-selected, en:front-photo-selected,
                        en:photos-uploaded
                      states_hierarchy:
                      - en:to-be-completed
                      - en:nutrition-facts-completed
                      - en:ingredients-completed
                      - en:expiration-date-completed
                      - en:packaging-code-to-be-completed
                      - en:characteristics-to-be-completed
                      - en:origins-to-be-completed
                      - en:categories-completed
                      - en:brands-completed
                      - en:packaging-completed
                      - en:quantity-completed
                      - en:product-name-completed
                      - en:photos-to-be-validated
                      - en:packaging-photo-to-be-selected
                      - en:nutrition-photo-selected
                      - en:ingredients-photo-to-be-selected
                      - en:front-photo-selected
                      - en:photos-uploaded
                      states_tags:
                      - en:to-be-completed
                      - en:nutrition-facts-completed
                      - en:ingredients-completed
                      - en:expiration-date-completed
                      - en:packaging-code-to-be-completed
                      - en:characteristics-to-be-completed
                      - en:origins-to-be-completed
                      - en:categories-completed
                      - en:brands-completed
                      - en:packaging-completed
                      - en:quantity-completed
                      - en:product-name-completed
                      - en:photos-to-be-validated
                      - en:packaging-photo-to-be-selected
                      - en:nutrition-photo-selected
                      - en:ingredients-photo-to-be-selected
                      - en:front-photo-selected
                      - en:photos-uploaded
                      stores: "Bi1  Magasins U  Carrefour  Franprix  Auchan  Casino\
                        \  Intermarch\xE9,carrefour.fr"
                      stores_tags:
                      - bi1-magasins-u-carrefour-franprix-auchan-casino-intermarche
                      - carrefour-fr
                      teams: pain-au-chocolat,shark-attack,stakano,chocolatine,la-robe-est-bleue,vegan,m,b,c,vegancheck
                      teams_tags:
                      - pain-au-chocolat
                      - shark-attack
                      - stakano
                      - chocolatine
                      - la-robe-est-bleue
                      - vegan
                      - m
                      - b
                      - c
                      - vegancheck
                      traces: ''
                      traces_from_ingredients: ''
                      traces_from_user: '(fr) '
                      traces_hierarchy: []
                      traces_lc: fr
                      traces_tags: []
                      unique_scans_n: 2544
                      unknown_ingredients_n: 2
                      unknown_nutrients_tags: []
                      update_key: ing20220322
                      vitamins_prev_tags: []
                      vitamins_tags: []
                    status: 1
                    status_verbose: product found
      description: 'A product can be fetched via its unique barcode.

        It returns all the details of that product response.

        '
      operationId: getProductByBarcode
  /api/v2/product/{barcode}?fields=knowledge_panels:
    get:
      tags:
      - Read Requests
      summary: 'Get Knowledge panels for a specific product by barcode

        (special case of get product)

        '
      parameters:
      - name: barcode
        in: path
        description: 'The barcode of the product to be fetched

          '
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '3017620422003'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/get_product_by_barcode_base'
                - type: object
                  properties:
                    product:
                      $ref: '#/components/schemas/product_knowledge_panels'
      description: 'Knowledge panels gives high leve informations about a product,

        ready to display.

        This is used by open food facts website,

        and by the official mobile application

        '
      operationId: getProductByBarcodeKnowledgePanels
  /cgi/ingredients.pl:
    parameters: []
    get:
      summary: Performing OCR on a Product
      operationId: getIngredients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ocr_on_product'
      description: 'Open Food Facts uses optical character recognition (OCR) to retrieve
        nutritional data and other information from the product labels.

        '
      parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/code'
      - $ref: '#/components/parameters/process_image'
      - $ref: '#/components/parameters/ocr_engine'
      tags:
      - Read Requests
  /cgi/product_image_crop.pl:
    post:
      summary: Crop A Photo
      operationId: productImageCrop
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: 'Cropping is only relevant for editing existing products.

        You cannot crop an image the first time you upload it to the system.

        '
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/crop_a_photo'
      tags:
      - Write Requests
    get:
      summary: Rotate A Photo
      operationId: getProductImageCrop
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rotate_a_photo'
      description: "Although we recommend rotating photos manually and uploading a\
        \ new version of the image,\nthe OFF API allows you to make api calls to automate\
        \ this process.\nYou can rotate existing photos by setting the angle to 90\xBA\
        , 180\xBA, or 270\xBA clockwise.\n"
      parameters:
      - $ref: '#/components/parameters/code'
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/imgid'
      - $ref: '#/components/parameters/angle'
      tags:
      - Write Requests
  /cgi/product_image_unselect.pl:
    post:
      operationId: postProductImageUnselect
      summary: Unselect A Photo
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/unselect_a_photo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: status of the unselect operation
                    example: status ok
                  status_code:
                    type: number
                    description: status code of the operation
                    example: 0
                  imagefield:
                    type: string
                    example: front_fr
                    description: image field that was unselected
  /cgi/product_jqm2.pl:
    post:
      summary: Add or Edit A Product
      operationId: postProduct
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_or_edit_a_product'
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/combined_add_or_edit_a_product_and_change_ref_properties'
      tags:
      - Write Requests
      description: 'This updates a product.


        Note: If the barcode exists then you will be editing the existing product,

        However if it doesn''''t you will be creating a new product with that unique
        barcode,

        and adding properties to the product.

        '
  /api/v2/search:
    get:
      summary: Search for Products
      tags:
      - Read Requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/search_for_products'
      operationId: searchProducts
      description: "Search request allows you to get products that match your search\
        \ criteria.\n\nIt allows you create many custom APIs for your use case.\n\n\
        If the search query parameter has 2 possible values, they are seperated by\
        \ a comma(,).\nWhen filtering via a parameter that has different language\
        \ codes like `fr`, `de` or `en`, specify the language code in the parameter\
        \ name e.g `categories_tags_en`\n\n**Important:** search API v2 does not support\
        \ full text request (search_term),\nyou have to use [search API v1](https://wiki.openfoodfacts.org/API/Read/Search)\
        \ for that.\nUpcoming [search-a-licious project](https://github.com/openfoodfacts/search-a-licious)\
        \ will fix that.\n\n### Limiting results\n\nYou can limit the size of returned\
        \ objects thanks to the `fields` object (see below).\n\neg: `fields=code,product_name,brands,attribute_groups``\n\
        \nPlease use it as much as possible to avoid overloading the servers.\n\n\
        The search use pagination, see `page` and `page_size` parameters.\n\n**Beware:**\
        \ the `page_count` data in item is a bit counter intuitive\u2026, read the\
        \ description.\n\n### Conditions on tags\n\nAll `_tags`` parameters accepts\
        \ either:\n\n* a single value\n* or a comma-separated list of values (doing\
        \ a AND)\n* or a pipe separated list of values (doing a OR)\n\nYou can exclude\
        \ terms by using a \"-\" prefix.\n\nFor taxonomized entries, you might either\
        \ use the tag id (recommended),\nor a known synonym (without language prefix)\n\
        \n* `labels_tags=en:organic,en:fair-trade` find items that are fair-trade\
        \ AND organic\n* `labels_tags=en:organic|en:fair-trade` find items that are\
        \ fair-trade OR organic\n* `labels_tags=en:organic,en:-fair-trade` find items\
        \ that are organic BUT NOT fair-trade\n\n\n### Conditions on nutriments\n\n\
        To get a list of nutrients\n\nYou can either query on nutrient per 100g (`_100g`\
        \ suffix)\nor per serving (`serving` suffix).\n\nYou can also add `_prepared_`\n\
        to get the nutrients in the prepared product instead of as sold.\n\nYou can\
        \ add a comparison operator and value to the parameter name\nto get products\
        \ with nutrient above or bellow a value.\nIf you use a parameter value it\
        \ exactly match it.\n\n* `energy-kj_100g<200` products where energy in kj\
        \ for 100g is less than 200kj\n* `sugars_serving>10` products where sugar\
        \ per serving is greater than 10g\n* `saturated-fat_100g=1` products where\
        \ saturated fat per 100g is exactly 10g\n* `salt_prepared_serving<0.1` products\
        \ where salt per serving for prepared product is less than 0.1g\n\n### More\
        \ references\n\nSee also [wiki page](https://wiki.openfoodfacts.org/Open_Food_Facts_Search_API_Version_2)\n"
      parameters:
      - $ref: '#/components/parameters/tags_parameters_properties_additives_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_allergens_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_brands_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_categories_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_countries_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_emb_codes_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_labels_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_manufacturing_places_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_nutrition_grades_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_origins_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_packaging_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_purchase_places_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_states_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_stores_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_traces_tags'
      - $ref: '#/components/parameters/tags_parameters_properties_tag_name_with_language_code'
      - $ref: '#/components/parameters/nutrition_search_properties_nutrient_lower_than'
      - $ref: '#/components/parameters/nutrition_search_properties_nutrient_greater_than'
      - $ref: '#/components/parameters/nutrition_search_properties_nutrient_equal'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort_by'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/page_size'
    parameters: []
  /cgi/suggest.pl:
    get:
      summary: Get Suggestions to Aid Adding/Editing Products
      tags:
      - Read Requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
      operationId: getSuggestions
      parameters:
      - $ref: '#/components/parameters/tagtype'
      - $ref: '#/components/parameters/term'
      description: 'For example , Dave is looking for packaging_shapes that contain
        the term "fe",

        all packaging_shapes containing "fe" will be returned.

        This is useful if you have a search in your application,

        for a specific product field.

        '
  /cgi/nutrients.pl:
    get:
      summary: Get a nested list of nutrients that can be displayed in the nutrition
        facts table for a specific country and language
      tags:
      - Read Requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_nutrients'
      operationId: getNutrients
      parameters:
      - $ref: '#/components/parameters/cc'
      - $ref: '#/components/parameters/lc'
      description: 'Used to display the nutrition facts table of a product, or to
        display a form to input those nutrition facts.

        '
  /api/v2/attribute_groups:
    get:
      summary: Get the list of attributes available for personal search.
      description: 'Attributes are at the heart of personal search.

        They score the products according to different criterias,

        which could then be matched to a user''s preferences.


        This API helps you list attributes and display them in your application,

        for the user to choose the importance of each criteria.


        note: /api/v2/attribute_groups_{lc} is also a valid route, but consider it
        deprecated

        '
      tags:
      - Read Requests
      - Personal search
      operationId: getAttributeGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_attribute_groups'
      parameters:
      - $ref: '#/components/parameters/lc'
  /api/v2/preferences:
    get:
      summary: 'Get the weights corresponding to attributes preferences

        to compute personal product

        '
      tags:
      - Read Requests
      - Personal search
      operationId: getPreferences
      parameters:
      - $ref: '#/components/parameters/lc'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_preferences'
components:
  schemas:
    Product-Base:
      $ref: '#/components/schemas/product_base'
    Product-Misc:
      $ref: '#/components/schemas/product_misc'
    Product-Tags:
      $ref: '#/components/schemas/product_tags'
    Product-Nutrition:
      $ref: '#/components/schemas/product_nutrition'
    Product-Ingredients:
      $ref: '#/components/schemas/product_ingredients'
    Product-Images:
      $ref: '#/components/schemas/product_images'
    Product-Eco-Score:
      $ref: '#/components/schemas/product_ecoscore'
    Product-Metadata:
      $ref: '#/components/schemas/product_meta'
    Product-Data-Quality:
      $ref: '#/components/schemas/product_quality'
    Product-Knowledge-Panels:
      $ref: '#/components/schemas/product_knowledge_panels'
    Product-Attribute-Groups:
      $ref: '#/components/schemas/product_attribute_groups'
    Product:
      $ref: '#/components/schemas/product'
    get_product_by_barcode_base:
      type: object
      x-stoplight:
        id: s4gz59htj4gc3
      properties:
        code:
          type: string
          description: "Barcode of the product\n(can be EAN-13 or internal codes for\
            \ some food stores).\nFor products without a barcode, Open Food Facts\
            \ assigns a \nnumber starting with the 200 reserved prefix.\n"
        status:
          type: integer
        status_verbose:
          type: string
    product_base:
      type: object
      description: 'Base product data

        '
      properties:
        abbreviated_product_name:
          type: string
          description: Abbreviated name in requested language
        code:
          type: string
          description: 'barcode of the product (can be EAN-13 or internal codes for
            some food stores),

            for products without a barcode,

            Open Food Facts assigns a number starting with the 200 reserved prefix

            '
        codes_tags:
          type: array
          items:
            type: string
            description: 'A value which is the type of barcode "code-13" or "code-8"

              and

              A series of mask for the barcode

              It helps retrieve barcodes starting by

              '
            example: '["code-13","3017620422xxx","301762042xxxx","30176204xxxxx","3017620xxxxxx","301762xxxxxxx","30176xxxxxxxx","3017xxxxxxxxx","301xxxxxxxxxx","30xxxxxxxxxxx","3xxxxxxxxxxxx"]

              '
        generic_name:
          type: string
          description: 'Legal name of the product as regulated

            by the European authorities.

            '
        id:
          description: 'internal identifier for the product, usually set to the value
            of `code`,

            except on the producers platform where it is prefixed by the owner

            '
          type: string
        lc:
          type: string
          description: 'Main language of the product.

            This is a duplicate of `lang` property (for historical reasons).

            '
        lang:
          type: string
          description: 'Main language of the product.


            This should be the main language of product packaging (if one is predominant).


            Main language is also used to decide which ingredients list to parse.

            '
        nova_group:
          type: integer
          description: 'Nova group as an integer from 1 to 4. See https://world.openfoodfacts.org/nova

            '
        nova_groups:
          type: string
        obsolete:
          type: string
        obsolete_since_date:
          description: 'A date at which the product was declared obsolete.

            This means it''s not produced any more.

            '
          type: string
        product_name:
          type: string
          description: 'The name of the product

            '
        product_name_en:
          type: string
          description: 'The name of the product can also

            be in many other languages like

            product_name_fr (for French).

            '
        product_quantity:
          type: string
          description: 'The size in g or ml for the whole product.

            It''s a normalized version of the quantity field.

            '
          example: '500'
        product_quantity_unit:
          type: string
          description: 'The unit (either g or ml) for the correponding product_quantity.

            '
          example: g
        quantity:
          type: string
          description: 'Quantity and Unit.

            '
        abbreviated_product_name_(?<language_code>\w\w):
          type: string
          description: Abbreviated name in language `language_code`.
        generic_name_(?<language_code>\w\w):
          type: string
          description: 'This can be returned in many other languages

            like generic_name_fr (for French).

            '
    shape:
      title: Packaging component shape
      x-stoplight:
        id: xrj8agza3dwgf
      type: object
      description: The shape property is canonicalized using the packaging_shapes
        taxonomy.
      examples:
      - id: en:bottle
        lc_name: bouteille
      properties:
        id:
          type: string
          description: Canonical id of the entry in the taxonomy. If the value cannot
            be mapped to a taxonomy entry, the value will be the name of the entry
            in its original language prefixed by the language 2 letter code and a
            colon.
        lc_name:
          type: string
          description: Name of the entry in the language requested in the tags_lc
            field of the request. This field is returned only of tags_lc is specified.
            If the translation is not available, or if the entry does not exist in
            the taxonomy, the value will be the name of the entry in its original
            language prefixed by the language 2 letter code and a colon.
    material:
      title: Packaging component material
      x-stoplight:
        id: n6umazgqmwrd5
      type: object
      description: The material property is canonicalized using the packaging_materials
        taxonomy.
      examples:
      - id: en:bottle
        lc_name: bouteille
      properties:
        id:
          type: string
          description: Canonical id of the entry in the taxonomy. If the value cannot
            be mapped to a taxonomy entry, the value will be the name of the entry
            in its original language prefixed by the language 2 letter code and a
            colon.
        lc_name:
          type: string
          description: Name of the entry in the language requested in the tags_lc
            field of the request. This field is returned only of tags_lc is specified.
            If the translation is not available, or if the entry does not exist in
            the taxonomy, the value will be the name of the entry in its original
            language prefixed by the language 2 letter code and a colon.
    recycling:
      title: Packaging component recycling instruction
      x-stoplight:
        id: 376tk8e2cmyh2
      type: object
      description: The recycling property is canonicalized using the packaging_recycling
        taxonomy.
      examples:
      - id: en:bottle
        lc_name: bouteille
      properties:
        id:
          type: string
          description: Canonical id of the entry in the taxonomy. If the value cannot
            be mapped to a taxonomy entry, the value will be the name of the entry
            in its original language prefixed by the language 2 letter code and a
            colon.
        lc_name:
          type: string
          description: Name of the entry in the language requested in the tags_lc
            field of the request. This field is returned only of tags_lc is specified.
            If the translation is not available, or if the entry does not exist in
            the taxonomy, the value will be the name of the entry in its original
            language prefixed by the language 2 letter code and a colon.
    packaging_component:
      description: "Each packaging component has different properties to specify how\
        \ many there are, its shape, material etc.\n\nThe shape, material and recycling\
        \ properties are mapped to one entry in the packaging_shapes, packaging_materials\
        \ and packaging_recycling taxonomies, and the value of the property is the\
        \ canonical name of the taxonomy entry (e.g. en:bottle).\n\nThey may contain\
        \ values that could not yet get matched to their respective taxonomy, in which\
        \ case they will contain a free text value prefixed with the language code\
        \ of this text value (e.g. \"fr:Bouteille sph\xE9rique\" might have been entered\
        \ by a French user to indicate it is a spherical bottle)."
      title: Packaging component (READ)
      type: object
      examples:
      - number_of_units: 6
        shape:
          id: en:bottle
          lc_name: bouteille
        material:
          id: en:bottle
          lc_name: bouteille
        recycling:
          id: en:bottle
          lc_name: bouteille
        quantity_per_unit: 25 cl
        quantity_per_unit_value: 25
        quantity_per_unit_unit: cl
        weight_specified: 30
        weight_measured: 32
        weight_estimated: 26
        weight: 30
        weight_source_id: specified
      properties:
        number_of_units:
          type: integer
          description: umber of units of this packaging component contained in the
            product (e.g. 6 for a pack of 6 bottles)
        shape:
          $ref: '#/components/schemas/shape'
        material:
          $ref: '#/components/schemas/material'
        recycling:
          $ref: '#/components/schemas/recycling'
        quantity_per_unit:
          type: string
          description: Quantity (weight or volume) of food product contained in the
            packaging component. (e.g. 75cl for a wine bottle)
        quantity_per_unit_value:
          type: number
          description: Value parsed from the quantity field.
        quantity_per_unit_unit:
          type: string
          description: Unit parsed and normalized from the quantity field.
        weight_specified:
          type: number
          description: Weight (as specified by the manufacturer) of one unit of the
            empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water
            bottles, it might be 30, the weight in grams of 1 empty water bottle without
            its cap which is a different packaging component).
        weight_measured:
          type: number
          description: Weight (as measured by one or more users) of one unit of the
            empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water
            bottles, it might be 30, the weight in grams of 1 empty water bottle without
            its cap which is a different packaging component).
        weight_estimated:
          type: number
          description: Weight (as estimated from similar products) of one unit of
            the empty packaging component (in grams). (e.g. for a 6 pack of 1.5l water
            bottles, it might be 30, the weight in grams of 1 empty water bottle without
            its cap which is a different packaging component).
        weight:
          type: number
          description: Weight of one unit of the empty packaging component.
        weight_source_id:
          type: string
          description: Indicates which field was used to populate the "weight" field.
            Either "specified", "measured", or "estimated"
    packagings:
      type: array
      x-stoplight:
        id: 1cyz4qo9njog7
      title: Packagings (READ)
      description: 'The packagings object is an array of individual packaging component
        objects.


        The Packaging data document explains how packaging data is structured in Open
        Food Facts: https://openfoodfacts.github.io/openfoodfacts-server/dev/explain-packaging-data/


        The shape, material and recycling properties of each packaging component are
        linked to entries in the packaging_shapes, packaging_materials and packaging_recycling
        taxonomies:


        https://world.openfoodfacts.org/data/taxonomies/packaging_shapes.json

        https://world.openfoodfacts.org/data/taxonomies/packaging_materials.json

        https://world.openfoodfacts.org/data/taxonomies/packaging_recycling.json


        If the tags_lc field is set, the properties will include a lc_name field with
        the translation in the requested language.'
      examples:
      - - number_of_units: 6
          shape:
            id: en:bottle
            lc_name: bouteille
          material:
            id: en:bottle
            lc_name: bouteille
          recycling:
            id: en:bottle
            lc_name: bouteille
          quantity_per_unit: 25 cl
          quantity_per_unit_value: 25
          quantity_per_unit_unit: cl
          weight_specified: 30
          weight_measured: 32
          weight_estimated: 26
          weight: 30
          weight_source_id: specified
      items:
        $ref: '#/components/schemas/packaging_component'
      readOnly: true
    packagings_complete:
      title: packagings_complete
      x-stoplight:
        id: hxnnsy954q1ey
      type: integer
      minimum: 0
      maximum: 1
      description: Indicate if the packagings array contains all the packaging parts
        of the product. This field can be set by users when they enter or verify packaging
        data. Possible values are 0 or 1.
    product_misc:
      type: object
      description: 'Miscellaneous but important fields of a product

        '
      properties:
        additives_n:
          type: integer
          description: 'Number of food additives.

            '
        checked:
          type: string
        complete:
          type: integer
        completeness:
          type: number
        ecoscore_grade:
          type: string
          description: 'See also: `ecoscore_tags`

            '
        ecoscore_score:
          type: integer
          description: 'See also: `ecoscore_tags`

            '
        food_groups:
          type: string
        food_groups_tags:
          type: array
          items:
            type: string
        nutrient_levels:
          description: 'Traffic light indicators on main nutrients levels

            '
          type: object
          properties:
            fat:
              type: string
              enum:
              - low
              - moderate
              - high
            salt:
              type: string
              enum:
              - low
              - moderate
              - high
            saturated-fat:
              type: string
              enum:
              - low
              - moderate
              - high
            sugars:
              type: string
              enum:
              - low
              - moderate
              - high
        packaging_text:
          type: string
          description: 'Recycling instructions as raw text, e.g. Plastic

            bottle to recycle, Plastic cap to recycle.

            This will get automatically parsed and

            will be used to compute the Eco-Score.

            You can either request it (if it exists) or

            send it in a specific language.

            '
          example: packaging_text_en
        packagings:
          $ref: '#/components/schemas/packagings'
        packagings_complete:
          $ref: '#/components/schemas/packagings_complete'
        pnns_groups_1:
          description: 'Category of food according to [French Nutrition and Health
            Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9)

            '
          type: string
        pnns_groups_1_tags:
          type: array
          items:
            type: string
        pnns_groups_2:
          description: 'Sub Category of food according to [French Nutrition and Health
            Program](https://fr.wikipedia.org/wiki/Programme_national_nutrition_sant%C3%A9)

            '
          type: string
        pnns_groups_2_tags:
          type: array
          items:
            type: string
        popularity_key:
          description: 'An imprecise measurement of popularity based on Scan statistics.
            A higher value means higher popularity.

            '
          type: integer
        popularity_tags:
          description: 'Indicators for the popularity of a product, like the amount
            of scans in a specific year.

            '
          type: array
          items:
            type: string
        scans_n:
          type: integer
        unique_scans_n:
          type: integer
        serving_quantity:
          type: string
          description: 'Normalized version of serving_size.

            Note that this is NOT the number of servings by product.

            <small>(in perl, see `normalize_serving_size`)</small>

            '
        serving_quantity_unit:
          type: string
          description: 'The unit (either g or ml) for the correponding serving_quantity.

            '
          example: g
        serving_size:
          type: string
          description: 'Serving size text (generally in g or ml).

            We expect a quantity + unit but the user is free to input any string.

            '
        food_groups_(?<language_code>\w\w):
          type: string
          description: see `food_groups`
        packaging_text_(?<language_code>\w\w):
          type: string
          description: 'Packaging text in language designated by `language_code`

            '
    product_tags:
      type: object
      description: 'Data about a product which is represented as tags

        '
      properties:
        brands:
          type: string
          description: List of brands (not taxonomized)
        brands_tags:
          type: array
          items:
            type: string
            description: List of brands (tags, not taxonomized)
        categories:
          type: string
        categories_hierarchy:
          type: array
          items:
            type: string
        categories_lc:
          type: string
          description: Categories language code
        categories_tags:
          type: array
          items:
            type: string
        checkers_tags:
          type: array
          items:
            type: string
            description: List of checkers (users who checked the product) tags
        cities:
          type: string
        cities_tags:
          type: array
          items:
            type: object
        correctors_tags:
          type: array
          items:
            type: string
        countries:
          type: string
          description: 'List of countries where the product is sold.

            '
        countries_hierarchy:
          type: array
          items:
            type: string
        countries_lc:
          type: string
          description: Countries language code
        countries_tags:
          type: array
          items:
            type: string
        ecoscore_tags:
          description: 'All ecoscore of a product.

            Most of the time it''s only one value,

            but it might eventually be more for products composed of sub-products.

            See also: `ecoscore_score`, `ecoscore_grade`.

            '
          type: array
          items:
            type: string
        emb_codes:
          type: string
          description: 'Packager code. EMB is the French system of traceability codes
            for packager.

            '
          example: EMB 2013330
        emb_codes_orig:
          type: string
        emb_codes_tags:
          type: array
          items:
            type: object
        labels:
          type: string
        labels_hierarchy:
          type: array
          items:
            type: string
        labels_lc:
          type: string
        labels_tags:
          type: array
          items:
            type: string
        entry_dates_tags:
          description: 'The data as a series of tag: `yyyy-mm-dd`, `yyyy-mm`, `yyyy`

            '
          type: array
          items:
            type: string
          example:
          - '2016-03-11'
          - 2016-03
          - '2016'
        manufacturing_places:
          type: string
          description: 'Places where the product was manufactured or transformed.

            '
        manufacturing_places_tags:
          type: array
          items:
            type: object
        nova_groups_tags:
          type: array
          items:
            type: string
        nutrient_levels_tags:
          type: array
          items:
            type: string
    image_size:
      type: object
      properties:
        h:
          type: integer
          example: 400
          description: 'The height of the reduced/full image in pixels.

            '
        w:
          type: integer
          example: 255
          description: The width of the reduced/full image in pixels.
    image:
      type: object
      description: 'This object represent an image that was uploaded to a product.

        "imgid" is an integer which is a sequential number unique to each picture.

        '
      properties:
        sizes:
          type: object
          description: "The available image sizes for the product (both reduced and\
            \ full). \nThe reduced images are the ones with numbers as the key( 100,\
            \ 200 etc) \nwhile the full images have `full` as the key.\n"
          properties:
            full:
              description: 'properties of fullsize image

                **TODO** explain how to compute name

                '
              $ref: '#/components/schemas/image_size'
            image_size_example:
              description: 'properties of thumbnail of size `image_size`.

                **TODO** explain how to compute name


                For real type: see description of property `full`.

                (Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))

                '
              type: string
        uploaded_t:
          type: string
          example: '1457680652'
          description: 'The time the image was uploaded (as unix timestamp).

            '
        uploader:
          type: string
          example: openfoodfacts-contributors
          description: 'The contributor that uploaded the image.

            '
    image_role:
      type: object
      description: 'property of an image (or part thereof) selected for a particular
        role and a particular language.

        '
      properties:
        angle:
          type: integer
          example: 0
          description: The angle of the image rotation (if it was rotated).
        coordinates_image_size:
          type: string
          example: full
        geometry:
          type: string
          example: 0x0--1--1
        imgid:
          type: string
          example: '121'
          description: The id of the original/source image that was selected to edit(rotate,
            normalize etc) to produce this new image.
        rev:
          type: string
          example: '420'
        sizes:
          type: object
          description: "The available image sizes for the product (both reduced and\
            \ full). \nThe reduced images are the ones with numbers as the key( 100,\
            \ 200 etc)\nwhile the full images have `full` as the key.\n"
          properties:
            '100':
              $ref: '#/components/schemas/image_size'
            '200':
              $ref: '#/components/schemas/image_size'
            '400':
              $ref: '#/components/schemas/image_size'
            full:
              $ref: '#/components/schemas/image_size'
        x1:
          type: string
          example: '-1'
        x2:
          type: string
          example: '-1'
        y1:
          type: string
          example: '-1'
        y2:
          type: string
          example: '-1'
    image_urls:
      type: object
      properties:
        language_code_example:
          type: string
          description: url of the image for language `language_code`
    product_images:
      type: object
      description: 'Information about Images of a product.


        Images ensure the reliability of Open Food Facts data.

        It provides a primary source and proof of all the structured data.

        You may therefore want to display it along the structured information.


        See also tutorials about images:

        * [Getting images](https://openfoodfacts.github.io/openfoodfacts-server/api/how-to-download-images/)

        * [Uploading images](https://openfoodfacts.github.io/openfoodfacts-server/api/tutorial-uploading-photo-to-a-product/)

        '
      properties:
        images:
          description: 'This contains properties for all images contained on the product.

            '
          type: object
          properties:
            1:
              type: object
              description: 'This represents an image uploaded for this product.

                '
              $ref: '#/components/schemas/image'
            front:
              description: 'This represents an image (or part of it) selected for
                a specific role on this product.

                '
              type: object
              $ref: '#/components/schemas/image_role'
            imgid_example:
              description: 'See property `1` to get the real type of those objects

                (Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))

                '
              type: string
            image_type_example:
              description: 'See property `front` to get the real type of those objects

                (Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))

                '
              type: string
        last_image_dates_tags:
          type: array
          items:
            type: string
        last_image_t:
          description: timestamp of last image upload (or update?)
          type: integer
        selected_images:
          type: object
          description: 'URL for selected (important) images of the product.


            This is very handy if you display the product to users.

            '
          properties:
            front:
              type: object
              description: URLs of thumbnails image of image of type `image_type`
              properties:
                display:
                  description: 'Thumbnail urls of product image (front) adapted to
                    display on product page

                    '
                  type: object
                  $ref: '#/components/schemas/image_urls'
                small:
                  description: 'Thumbnail urls of product image (front) adapted to
                    display on product list page

                    '
                  type: object
                  $ref: '#/components/schemas/image_urls'
                thumb:
                  description: 'Thumbnail urls of product image (front) in smallest
                    format

                    '
                  type: object
                  $ref: '#/components/schemas/image_urls'
            image_type_example:
              description: 'See property `front` to get the real type of those objects

                (Put this way because of a [bug in rapidoc](https://github.com/rapi-doc/RapiDoc/issues/880))

                '
              type: string
        image_small_url:
          type: string
        image_thumb_url:
          type: string
        image_url:
          type: string
    agribalyse:
      type: object
      properties:
        agribalyse_food_code:
          type: string
        co2_agriculture:
          type: number
        co2_consumption:
          type: integer
        co2_distribution:
          type: number
        co2_packaging:
          type: number
        co2_processing:
          type: number
        co2_total:
          type: number
        co2_transportation:
          type: number
        code:
          type: string
        dqr:
          type: string
        ef_agriculture:
          type: number
        ef_consumption:
          type: integer
        ef_distribution:
          type: number
        ef_packaging:
          type: number
        ef_processing:
          type: number
        ef_total:
          type: number
        ef_transportation:
          type: number
        is_beverage:
          type: integer
        name_en:
          type: string
          description: 'This can be returned in many other languages

            like name_fr (for french).

            '
        score:
          type: integer
        version:
          type: string
    product_ecoscore:
      type: object
      description: 'Fields related to Eco-Score for a product.


        See also: `ecoscore_score`, `ecoscore_grade` and `ecoscore_tags`.

        '
      properties:
        ecoscore_data:
          type: object
          description: "An object about a lot of details about data needed for Eco-Score\
            \ computation \nand complementary data of interest.\n"
          properties:
            adjustments:
              type: object
              properties:
                origins_of_ingredients:
                  type: object
                  properties:
                    aggregated_origins:
                      type: array
                      items:
                        type: object
                        properties:
                          origin:
                            type: string
                          percent:
                            type: integer
                    epi_score:
                      type: integer
                    epi_value:
                      type: integer
                    origins_from_origins_field:
                      type: array
                      items:
                        type: string
                    transportation_scores:
                      type: object
                      properties:
                        language_code_example:
                          type: integer
                    transportation_values:
                      type: object
                      properties:
                        language_code_example:
                          type: integer
                    values:
                      type: object
                      properties:
                        language_code_example:
                          type: integer
                    warning:
                      type: string
                packaging:
                  type: object
                  properties:
                    non_recyclable_and_non_biodegradable_materials:
                      type: integer
                    packagings:
                      type: array
                      items:
                        type: object
                        properties:
                          ecoscore_material_score:
                            type: integer
                          ecoscore_shape_ratio:
                            type: integer
                          material:
                            type: string
                          shape:
                            type: string
                    score:
                      type: integer
                    value:
                      type: integer
                    warning:
                      type: string
                production_system:
                  type: object
                  properties:
                    labels:
                      type: array
                      example: vegan, fat free, Kosher
                      items:
                        type: string
                    value:
                      type: integer
                    warning:
                      type: string
                threatened_species:
                  type: object
                  properties:
                    ingredient:
                      type: string
                    value:
                      type: integer
            agribalyse:
              $ref: '#/components/schemas/agribalyse'
            grade:
              type: string
            grades:
              type: object
              properties:
                language_code_example:
                  type: string
            missing:
              type: object
              properties:
                labels:
                  type: integer
                origins:
                  type: integer
                packagings:
                  type: integer
            missing_data_warning:
              type: integer
            previous_data:
              type: object
              properties:
                grade:
                  type: string
                score:
                  type: integer
                agribalyse:
                  $ref: '#/components/schemas/agribalyse'
            score:
              type: integer
            scores:
              type: object
              properties:
                language_code_example:
                  type: integer
            status:
              type: string
        ecoscore_extended_data_version:
          type: string
        environment_impact_level:
          type: string
        environment_impact_level_tags:
          type: array
          items:
            type: object
    ingredient:
      type: array
      description: 'This structure gives the different ingredients and some information
        about them,

        like estimate on their quantity.

        '
      items:
        type: object
        properties:
          id:
            type: string
          percent:
            type: integer
          percent_estimate:
            type:
            - number
          percent_max:
            type:
            - number
          percent_min:
            type: integer
          text:
            type: string
          vegan:
            type: string
          vegetarian:
            type: string
    product_ingredients:
      type: object
      description: Fields about ingredients of a product
      properties:
        additives_tags:
          type: array
          items:
            type: string
        allergens:
          type: string
          description: comma separated list of allergens
        allergens_lc:
          type: string
          description: language in which `allergens` where input
        allergens_hierarchy:
          type: array
          items:
            type: string
        allergens_tags:
          type: array
          items:
            type: string
        ingredients:
          $ref: '#/components/schemas/ingredient'
        ingredients_analysis:
          type: object
          properties:
            en:palm-oil:
              type: array
              items:
                type: string
            en:vegan-status-unknown:
              type: array
              items:
                type: string
            en:vegetarian-status-unknown:
              type: array
              items:
                type: string
        ingredients_analysis_tags:
          type: array
          items:
            type: string
        ingredients_from_or_that_may_be_from_palm_oil_n:
          type: integer
        ingredients_from_palm_oil_n:
          type: integer
        ingredients_from_palm_oil_tags:
          type: array
          items:
            type: object
        ingredients_hierarchy:
          type: array
          items:
            type: string
        ingredients_n:
          type: integer
        ingredients_n_tags:
          type: array
          items:
            type: string
        ingredients_original_tags:
          type: array
          items:
            type: string
        ingredients_percent_analysis:
          type: integer
        ingredients_sweeteners_n:
          type: integer
          description: 'Number of sweeteners additives in the ingredients. Undefined
            if ingredients are not specified.

            '
        ingredients_non_nutritive_sweeteners_n:
          type: integer
          description: 'Number of non-nutritive sweeteners additives (as specified
            in the Nutri-Score formula) in the ingredients. Undefined if ingredients
            are not specified.

            '
        ingredients_tags:
          type: array
          items:
            type: string
        ingredients_lc:
          type: string
          description: "Language that was used to parse the ingredient list. If `ingredients_text`\
            \ is available\nfor the product main language (`lang`), `ingredients_lc=lang`,\
            \ otherwise we look at\n`ingredients_text` fields for other languages\
            \ and set `ingredients_lc` to the first\nnon-empty `ingredient_text`.\
            \ \n"
        ingredients_text:
          type: string
          description: 'Raw list of ingredients. This will get automatically

            parsed and get used to compute the Eco-Score or find allergens, etc..


            It''s a copy of ingredients_text in the main language of the product (see
            `lang` proprety).

            '
          example: "Farine de bl\xE9* 67,4%, sucre de canne*, huile de tournesol ol\xE9\
            ique*, graines de chia* 5,2%, son de bl\xE9*, oranges d\xE9shydrat\xE9\
            es * 0,9%, farine de riz*, poudres \xE0 lever (acide citrique, carbonates\
            \ de sodium), ar\xF4me naturel d'orange.\n"
        ingredients_text_with_allergens:
          type: string
          description: 'Same text as `ingredients_text` but where allergens have HTML
            elements around them to identify them

            '
          example: "Farine de <span class=\"allergen\">bl\xE9*</span> 67,4%, sucre\
            \ de canne*, huile de tournesol ol\xE9ique*, graines de chia* 5,2%, <span\
            \ class=\"allergen\">son de bl\xE9*</span>, oranges d\xE9shydrat\xE9es\
            \ * 0,9%, farine de riz*, poudres \xE0 lever (acide citrique, carbonates\
            \ de sodium), ar\xF4me naturel d'orange.\n"
        ingredients_that_may_be_from_palm_oil_n:
          type: integer
        ingredients_that_may_be_from_palm_oil_tags:
          type: array
          items:
            type: object
        ingredients_with_specified_percent_n:
          type: integer
        ingredients_with_specified_percent_sum:
          type: integer
        ingredients_with_unspecified_percent_n:
          type: integer
        ingredients_with_unspecified_percent_sum:
          type: integer
        known_ingredients_n:
          type: integer
        origins:
          type: string
          description: 'Origins of ingredients

            '
        origins_hierarchy:
          type: array
          items:
            type: object
        origins_lc:
          type: string
        origins_tags:
          type: array
          items:
            type: object
        traces:
          type: string
          description: 'List of substances that might cause allergies

            that are present in trace amounts in the product

            (this does not include the ingredients, as they

            are not only present in trace amounts).

            It is taxonomized with the allergens taxonomy.

            '
        traces_hierarchy:
          type: array
          items:
            type: object
        traces_lc:
          type: string
        traces_tags:
          type: array
          items:
            type: object
        unknown_ingredients_n:
          type: integer
        ingredients_text_(?<language_code>\w\w):
          type: string
          description: 'Raw list of ingredients in language given by ''language_code''.


            See `ingredients_text`

            '
        ingredients_text_with_allergens_(?<language_code>\w\w):
          description: 'Like `ingredients_text_with_allergens` for a particular language

            '
          type: string
    product_nutrition:
      type: object
      description: 'Nutrition fields of a product


        Most of these properties are read-only.


        See [how to add nutrition data](https://openfoodfacts.github.io/openfoodfacts-server/api/ref-cheatsheet/#add-nutrition-facts-values-units-and-base)

        '
      properties:
        no_nutrition_data:
          type: string
          description: 'When a product does not have nutrition data displayed on the

            packaging, the user can check the field "Nutrition facts are

            not specified on the product".

            By doing so, the no_nutrition_data field takes the value "on".

            This case is frequent (thousands of products).

            '
          example: 'on'
        nutrition_data_per:
          type: string
          enum:
          - serving
          - 100g
          description: 'The nutrition data on the package can be per serving or per
            100g.


            This is essential to understand if `<nutrient>_value` and `<nutrient>`

            values in `nutriments` applies for a serving or for 100g.


            **IMPORTANT:**

            When writing products,

            this setting applies to all existing nutrients values for the product,

            not only the nutrient values sent in the write request.

            So it should not be changed unless all nutrients values are provided

            with values that match the nutrition_data_per field.

            '
        nutrition_data_prepared_per:
          type: string
          enum:
          - serving
          - 100g
          description: 'The nutrition data for prepared product on the package (if
            any) can be per serving or per 100g.


            This is essential to understand if `<nutrient>_prepared_value` and `<nutrient>_prepared`

            values in `nutriments` applies for a serving or for 100g.


            See also important note on `nutrition_data_per`.

            '
        nutriments:
          type: object
          description: 'All known nutrients for the product.


            Note that each nutrients are declined with a variety of suffixes like
            `_100g`, `_serving`,

            see patternProperties below.


            A specific `_unit` is the unit used to measure the nutrient.


            Beware that some properties are to be interpreted based upon `nutrition_data_per`
            value.


            Also for products that have a nutrition table for prepared product

            (eg. the nutrition facts for a bowl of milk with cocoa powder),

            a `_prepared` suffix is added (before other suffixes).


            You can get all possible nutrients from the

            [nutrients taxonomy](https://static.openfoodfacts.org/data/taxonomies/nutrients.json)


            **FIXME** add more nutrients with description.

            '
          properties:
            alcohol:
              description: 'Quantity of alcohol


                (per 100g or per serving) in a standard unit (g or ml)

                '
              type: number
            carbohydrates:
              type: number
            energy:
              type: number
              description: 'It is the same as `energy-kj` if we have it, or computed
                from `energy-kcal` otherwise


                (per 100g or per serving) in kj

                '
            energy_value:
              type: number
              description: 'energy_value will be equal to energy-kj_value if we have
                it or to energy-kcal_value otherwise

                '
            energy_unit:
              type: string
              enum:
              - kcal
              - kj
              description: 'Equal to energy-kj_unit if we have it or to energy-kcal_unit
                otherwise

                '
            energy-kcal:
              type: number
              description: 'energy in kcal, if it is specified


                (per 100g or per serving) in a standard unit (g or ml)

                '
            energy-kj:
              type: number
              description: 'energy in kj, if it is specified


                (per 100g or per serving) in a standard unit (g or ml)

                '
            fat:
              type: number
            fruits-vegetables-legumes-estimate-from-ingredients:
              type: number
              description: 'An estimate, from the ingredients list of the percentage
                of fruits, vegetable and legumes.

                This is an important information for Nutri-Score (2023 version) computation.

                '
            fruits-vegetables-nuts-estimate-from-ingredients:
              type: number
              description: 'An estimate, from the ingredients list of the percentage
                of fruits, vegetable and nuts.

                This is an important information for Nutri-Score (2021 version) computation.

                '
            nova-group:
              type: integer
            nutrition-score-fr:
              description: 'Experimental nutrition score derived from

                the UK FSA score and adapted for the French market

                (formula defined by the team of Professor Hercberg).

                '
            proteins:
              type: number
            salt:
              type: number
            saturated-fat:
              type: number
            sodium:
              type: number
            sugars:
              type: number
            carbon-footprint-from-known-ingredients_product:
              type: integer
            carbon-footprint-from-known-ingredients_serving:
              type: number
            erythritol:
              type: number
              description: 'erythritol is a polyol which is not providing any energy.

                As such, it needs not be taken into account when computing

                the energy of a product. Eryhtritol is now displayed on

                nutrition facts sheet of some products, mainly in the USA.

                This value is entered either by contributors, either by

                imports.

                '
              example: 12.5
            nutrient_example:
              description: 'The standardized value for a serving or 100g (or 100ml
                for liquids),

                depending on `nutrition_data_prepared_per`

                for the nutrient for **prepared** product.

                '
              type: number
              readOnly: true
        nutriscore_data:
          description: "Detail of data the Nutri-Score was computed upon.\n\n**Note**:\_\
            this might not be stable, don't rely too much on this, or, at least, tell\
            \ us !\n\n**TODO** document each property\n"
          type: object
          properties:
            energy:
              type: integer
            energy_points:
              type: integer
            energy_value:
              type: integer
            fiber:
              type: integer
            fiber_points:
              type: integer
            fiber_value:
              type: integer
            fruits_vegetables_nuts_colza_walnut_olive_oils:
              type: integer
            fruits_vegetables_nuts_colza_walnut_olive_oils_points:
              type: integer
            fruits_vegetables_nuts_colza_walnut_olive_oils_value:
              type: integer
            grade:
              type: string
            is_beverage:
              type: integer
            is_cheese:
              type: integer
            is_fat:
              type: integer
            is_water:
              type: integer
            negative_points:
              type: integer
            positive_points:
              type: integer
            proteins:
              type: number
            proteins_points:
              type: integer
            proteins_value:
              type: number
            saturated_fat:
              type: number
            saturated_fat_points:
              type: integer
            saturated_fat_ratio:
              type: number
            saturated_fat_ratio_points:
              type: integer
            saturated_fat_ratio_value:
              type: number
            saturated_fat_value:
              type: number
            score:
              type: integer
            sodium:
              type: number
            sodium_points:
              type: integer
            sodium_value:
              type: number
            sugars:
              type: number
            sugars_points:
              type: integer
            sugars_value:
              type: number
        nutriscore_grade:
          description: 'Nutri-Score for the product as a letter.


            See https://world.openfoodfacts.org/nutriscore.

            '
          type: string
          enum:
          - a
          - b
          - c
          - d
          - e
        nutriscore_score:
          description: 'Nutri-Score for the product as an integer (see also `nutriscore_grade`).

            '
          type: integer
        nutriscore_score_opposite:
          type: integer
        nutrition_grade_fr:
          type: string
          description: "Nutrition grade (\u2018a\u2019 to \u2018e\u2019),\nhttps://world.openfoodfacts.org/nutriscore.\n"
        nutrition_grades:
          description: 'Nutrition grades as a comma separated list.


            Some products with multiple components might have multiple Nutri-Score

            '
          type: string
        nutrition_grades_tags:
          type: array
          items:
            type: string
        nutrition_score_beverage:
          type: integer
        nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients:
          type: integer
        nutrition_score_warning_fruits_vegetables_nuts_estimate_from_ingredients_value:
          type: integer
        nutrition_score_warning_no_fiber:
          type: integer
        other_nutritional_substances_tags:
          type: array
          items:
            type: object
        unknown_nutrients_tags:
          type: array
          items:
            type: object
        vitamins_tags:
          type: array
          items:
            type: object
    product_quality:
      type: object
      description: 'This is data that is linked to products data quality

        '
      properties:
        data_quality_bugs_tags:
          type: array
          items:
            type: object
        data_quality_errors_tags:
          type: array
          items:
            type: object
        data_quality_info_tags:
          type: array
          items:
            type: string
        data_quality_tags:
          type: array
          items:
            type: string
        data_quality_warnings_tags:
          type: array
          items:
            type: string
        data_sources:
          type: string
          description: 'Source of data imported from producers.

            '
        data_sources_tags:
          type: array
          items:
            type: string
        last_check_dates_tags:
          type: array
          items:
            type: string
        last_checked_t:
          type: integer
        last_checker:
          type: string
        states:
          description: 'comma separated list of values indicating some states of the
            product,

            like things to be done, or to be completed.

            See [states taxonomy](https://static.openfoodfacts.net/data/taxonomies/states.json)

            '
          type: string
        states_hierarchy:
          type: array
          items:
            type: string
        states_tags:
          type: array
          items:
            description: 'Each state describe something that is completed or is to
              be done or improved on the product.


              Refer to [states taxonomy](https://static.openfoodfacts.net/data/taxonomies/states.json)

              '
            type: string
        misc_tags:
          description: 'Information about different aspect of the product

            '
          type: array
          items:
            type: string
    product_extended:
      type: object
      properties:
        additives_original_tags:
          type: array
          items:
            type: string
        additives_prev_original_tags:
          type: array
          items:
            type: string
        added_countries_tags:
          type: array
          items:
            type: object
        allergens_from_ingredients:
          type: string
        allergens_from_user:
          type: string
        amino_acids_prev_tags:
          type: array
          items:
            type: object
        amino_acids_tags:
          type: array
          items:
            type: object
        carbon_footprint_percent_of_known_ingredients:
          type: integer
        categories_properties:
          type: object
          properties:
            agribalyse_food_code:en:
              type: string
            agribalyse_proxy_food_code:en:
              type: string
            ciqual_food_code:en:
              type: string
        categories_properties_tags:
          type: array
          items:
            type: string
        category_properties:
          type: object
          additionalProperties:
            description: those are properties taken from the category taxonomy
            type: string
        ciqual_food_name_tags:
          type: array
          items:
            type: string
        compared_to_category:
          type: string
          description: 'the category to use for comparison.


            **TODO** explain how it is chosen.

            '
        conservation_conditions:
          type: string
        customer_service:
          type: string
          description: 'Contact info of customer service.

            '
        expiration_date:
          type: string
        link:
          type: string
          description: 'link to the product on the website of the producer

            '
        main_countries_tags:
          type: array
          items:
            type: object
        minerals_prev_tags:
          type: array
          items:
            type: object
        minerals_tags:
          type: array
          items:
            type: object
        owner_fields:
          type: object
          description: 'Those are fields provided by the producer (through producers
            platform),

            and the value he provided.

            '
          properties:
            additionalProperties:
              description: 'you can retrieve all kind of properties, the same as on
                the parent object (the product).

                It''s not processed entries (like tags for example) but raw ones.

                '
              oneOf:
              - type: integer
              - type: string
              - type: object
        nova_groups_markers:
          type: object
          description: 'Detail of ingredients or processing that makes the products
            having Nova 3 or 4

            '
          properties:
            '3':
              description: 'Markers of level 3

                '
              type: array
              items:
                type: array
                description: 'This array has two element for each marker.

                  One

                  '
                items:
                  type: string
            '4':
              description: 'Markers of level 4

                '
              type: array
        nucleotides_tags:
          type: array
          items:
            type: object
        origin:
          type: string
        purchase_places:
          type: string
          description: 'Country, state, or city where the product can be purchased.

            '
          example: Paris
        purchase_places_tags:
          type: array
          items:
            type: string
        stores:
          type: string
          description: 'Distributor name.

            '
          example: Walmart
        stores_tags:
          type: array
          items:
            type: string
        traces_from_ingredients:
          type: string
        traces_from_user:
          type: string
        conservation_conditions_(?<language_code>\w\w):
          type: string
        customer_service_(?<language_code>\w\w):
          type: string
        origin_(?<language_code>\w\w):
          type: string
          description: '`origin` in language indicated by `language_code`

            '
    product_meta:
      type: object
      description: 'Metadata of a product (author, editors, creation date, etc.)

        '
      properties:
        created_t:
          type: integer
          description: 'Date when the product was added (UNIX timestamp format).

            See also `entry_dates_tags`

            '
          example: '1457680652

            '
        creator:
          type: string
          description: 'The contributor who added the product first.

            '
        editors_tags:
          description: 'List of editors who edited the product.

            '
          type: array
          items:
            type: string
        informers_tags:
          type: array
          items:
            type: string
        interface_version_created:
          type: string
        interface_version_modified:
          type: string
        languages:
          type: object
          properties:
            en:(?<language_name>\w\w):
              type: integer
              description: '**TODO** explain !

                '
        languages_codes:
          type: object
          description: 'Same as `languages` but by language code, instead of language
            tags

            '
          properties:
            language_code_example:
              type: integer
        languages_hierarchy:
          type: array
          items:
            type: string
        languages_tags:
          type: array
          items:
            type: string
        last_edit_dates_tags:
          type: array
          items:
            type: string
        last_editor:
          type: string
        last_modified_by:
          type: string
          description: 'The username of the user who last modified the product.

            '
          example: sebleouf
        last_modified_t:
          type: integer
          description: 'Date when the product page was last modified.

            '
        owner:
          description: 'Id of the producer in case he provides his own data about
            a product (producer platform).

            '
          type: string
        owners_tags:
          description: 'Tagyfied version of owner

            '
          type: string
        photographers_tags:
          type: array
          items:
            type: string
        rev:
          description: revision number of this product version (each edit adds a revision)
          type: integer
        sources:
          type: array
          items:
            type: object
            properties:
              fields:
                type: array
                items:
                  type: string
              id:
                type: string
              images:
                type: array
                items:
                  type: object
              import_t:
                type: integer
              manufacturer:
                type:
                - integer
                - string
              name:
                type: string
              source_licence:
                type: string
              source_licence_url:
                type: string
              url:
                type:
                - 'null'
                - string
        sources_fields:
          type: object
          properties:
            org-gs1:
              type: object
              properties:
                gln:
                  type: string
                gpcCategoryCode:
                  type: string
                gpcCategoryName:
                  type: string
                isAllergenRelevantDataProvided:
                  type: string
                lastChangeDateTime:
                  type: string
                partyName:
                  type: string
                productionVariantDescription:
                  type: string
                publicationDateTime:
                  type: string
        teams:
          type: string
        teams_tags:
          type: array
          items:
            type: string
        update_key:
          type: string
    title_element:
      title: title_element
      x-stoplight:
        id: lox0wvl9bdgy2
      type: object
      description: The title of a panel.
      properties:
        name:
          type: string
          description: A short name of this panel, not including any actual values
        title:
          type: string
        type:
          type: string
          enum:
          - grade
          - percentage
          description: Used to indicate how the value of this item is measured, such
            as "grade" for Nutri-Score and Eco-Score or "percentage" for Salt
        grade:
          type: string
          description: The value for this panel where it corresponds to a A to E grade
            such as the Nutri-Score of the Eco-Score.
          enum:
          - a
          - b
          - c
          - d
          - e
          - unknown
        value:
          type: number
          description: The numeric value of the panel, where the type is "percentage"
        icon_url:
          type: string
        icon_color_from_evaluation:
          type: string
        icon_size:
          type: string
          description: 'If set to "small", the icon should be displayed at a small
            size.

            '
    text_element:
      title: text_element
      x-stoplight:
        id: vdwxlt73qnqfa
      type: object
      description: 'A text in simple HTML format to display.


        For some specific texts that correspond to a product field (e.g. a product
        name, the ingredients list of a product),the edit_field_* fields are used
        to indicate how to edit the field value.'
      properties:
        type:
          type: string
          description: 'the type of text, might influence the way you display it.

            '
          enum:
          - summary
          - warning
          - notes
        html:
          type: string
          description: Text to display in HTML format.
        language:
          type: string
          description: Language of the text. The name of the language is returned
            in the language requested when making the API call. e.g. if the text is
            in Polish, and the requested language is French, the language field will
            contain "Polonais" (French for "Polish"). Only set for specific fields
            such as the list of ingredients of a product.
        lc:
          type: string
          description: 2 letter language code for the text. Only set for specific
            fields such as the list of ingredients of a product.
        edit_field_id:
          type: string
          description: id of the field used to edit this text in the product edit
            API.
        edit_field_type:
          type: string
          description: Type of the product field.
        edit_field_value:
          type: string
          description: Current value of the product field. This may differ from the
            html field which can contain extra formating.
        source_url:
          type: string
          description: Link to the source
          example: https://en.wikipedia.org/wiki/Sodium acetate
        source_text:
          type: string
          description: name of the source
          example: Wikipedia
        source_lc:
          type: string
          description: Source locale name
          example: en
        source_language:
          type: string
          description: Human readable source locale name
          example: English
    image_element:
      title: image_element
      x-stoplight:
        id: k4v4kwt489q3j
      type: object
      properties:
        url:
          type: string
          description: full URL of the image
        width:
          type: integer
          description: "Width of the image.\n\nThis is just a suggestion coming from\
            \ the server, \nthe client may choose to use its own dimensions for the\
            \ image.\n"
        height:
          type: integer
          description: 'Height of the image.


            This is just a suggestion coming from the server,

            the client may choose to use its own dimensions for the image.

            '
        alt_text:
          type: string
          description: Alt Text of the image.
    panel_element:
      title: panel_element
      x-stoplight:
        id: ymx41elz4yrnj
      type: object
      description: Panels can include other panels as sub-panels using the panel_element.
      properties:
        panel_id:
          type: string
          description: The id of the panel to include. The id is the key of the panel
            in the panels object returned in the knowledge_panels field.
    panel_group_element:
      title: panel_group_element
      x-stoplight:
        id: b7emlfrgiuue2
      type: object
      properties:
        title:
          type: string
        panel_ids:
          type: array
          description: The ids of the panels to include. The ids are the keys of the
            panels in the panels object returned in the knowledge_panels field.
          items:
            type: string
      description: The panel group element is used to display an optional title followed
        by a number of sub-panels.
    table_element:
      title: table_element
      x-stoplight:
        id: 38zu3z4sruqo7
      type: object
      description: Element to display a table.
      properties:
        id:
          type: string
          description: An id for the table.
        title:
          type: string
          description: 'Title of the column.

            '
        rows:
          type: string
        columns:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              text:
                type: string
              text_for_small_screens:
                type: string
              style:
                type: string
              column_group_id:
                type: string
              shown_by_default:
                type: boolean
    element:
      title: element
      x-stoplight:
        id: e2ybdrtmx0tme
      type: object
      description: 'Each element object contains one specific element object such
        as a text element or an image element.

        '
      properties:
        type:
          element_type: string
          enum:
          - text
          - image
          - action
          - panel
          - panel_group
          - table
          description: 'The type of the included element object.

            The type also indicates which field contains the included element object.

            e.g. if the type is "text", the included element object will be in the
            "text_element" field.


            Note that in the future, new type of element may be added,

            so your code should ignore unrecognized types, and unknown properties.


            TODO: add Map type

            '
        text_element:
          $ref: '#/components/schemas/text_element'
        image_element:
          $ref: '#/components/schemas/image_element'
        action_element:
          type: string
        panel_element:
          $ref: '#/components/schemas/panel_element'
        panel_group_element:
          $ref: '#/components/schemas/panel_group_element'
        table_element:
          $ref: '#/components/schemas/table_element'
      required:
      - type
    panel:
      title: panel
      x-stoplight:
        id: mj9nhz3mqn05c
      type: object
      description: Each panel contains an optional title and an optional array of
        elements.
      properties:
        type:
          type: string
          description: Type of the panel. If set to "card", the panel and its sub-panels
            should be displayed in a card. If set to "inline", the panel should have
            its content always displayed.
        expanded:
          type: boolean
          description: If true, the panel is to be displayed already expanded. If
            false, only the title should be displayed, and the user should be able
            to click or tap it to open the panel and display the elements.
        expand_for:
          type: string
          description: If set to "large", the content of the panel should be expanded
            on large screens, but it should still be possible to unexpand it.
        evaluation:
          type: string
          description: A simple assessment of the panel value, typically used to format
            fonts, et.c e.g. bad = red
          enum:
          - good
          - average
          - neutral
          - bad
          - unknown
        title_element:
          $ref: '#/components/schemas/title_element'
        elements:
          type: array
          description: An ordered list of elements to display in the content of the
            panel.
          items:
            $ref: '#/components/schemas/element'
        level:
          type: string
          description: 'a message level, as levels we use in log.

            It might help theming the panel visualy

            '
          example: info
        size:
          type: string
          enum:
          - small
          description: "size is either empty (normal display) \nor small to indicate\
            \ a panel that should have a smaller font size\n"
          example: small
        topics:
          type: array
          items:
            type: string
            example: health
    panels:
      type: object
      x-stoplight:
        id: bcq3fkbtnwr5t
      title: panels
      description: 'The panels object is a dictionary of individual panel objects.

        Each key of the dictionary is the id of the panel, and the value is the panel
        object.


        Apps typically display a number of root panels with known panel ids (e.g.
        health_card and environment_card). Panels can reference other panels and display
        them as sub-panels.'
      examples:
      - additionalProperties: string
      properties:
        additionalProperties:
          $ref: '#/components/schemas/panel'
      readOnly: true
    product_knowledge_panels:
      type: object
      description: 'Knowledge panels for a product

        '
      properties:
        knowledge_panels:
          $ref: '#/components/schemas/panels'
    product_attribute_groups:
      type: object
      description: 'Specific data about a product to enable personal ranking

        '
      properties:
        attribute_groups:
          type: array
          description: Each element is an attribute that can help compute a personal
            ranking for the product
          items:
            type: object
            properties:
              id:
                type: string
                description: 'Unique id of the attribute.


                  It will be use to match against preferences parameters.

                  '
              status:
                type: string
                enum:
                - known
                - unknown
                description: wether we have the information to really compute this
                  criteria or not.
              title:
                type: string
                description: 'A descriptive sentence about the situation of the product
                  concerning attribute

                  '
                example: 'Does not contain: Molluscs'
              match:
                type: number
                format: float
                minimum: 0
                maximum: 100
                description: 'a numeric value for the match,

                  telling how much the products ranks well for this particular attribute.

                  The higher the value, the better the match.

                  '
              grade:
                description: every attribute as a grade for a to e
                type: string
                enum:
                - unknown
                - a
                - b
                - c
                - d
                - e
              name:
                type: string
                description: The name of attribute, for eventual display
              icon_url:
                type: string
                description: an icon representing the attribute match (often using
                  a color)
              description:
                type: string
                description: An eventual description of the value of the property
                  upon which this attribute is based
              description_short:
                type: string
                description: An eventual short description of the value of the property
                  upon which this attribute is based
    product:
      type: object
      description: 'This is all the fields describing a product and how to display
        it on a page.


        Refer to the different sub schema for more readable entries:


        * [Product Base](#cmp--schemas-product-base): Base fields of a product

        * [Product Misc](#cmp--schemas-product-misc): Miscellaneous but important
        fields of a product

        * [Product Tags](#cmp--schemas-product-tags): Tags fields on a product

        * [Product Nutrition](#cmp--schemas-product-nutrition): Nutrition fields of
        a product

        * [Product Ingredients](#cmp--schemas-product-ingredients): Fields about ingredients
        of a product

        * [Product Images](#cmp--schemas-product-images): Information about Images
        of a product

        * [Product Eco-Score](#cmp--schemas-product-images): Fields related to Eco-Score
        for a product

        * [Product Metadata](#cmp--schemas-product-ecoscore): Metadata of a product
        (author, editors, etc.)

        * [Product Data Quality](#cmp--schemas-product-quality): fields related to
        data quality for a product

        * [Product Knowledge Panels](#cmp--schemas-product-knowledge-panels): Knowledge
        panels for a product

        * [Product Attribute Groups](#cmp--schemas-product-attribute-groups): Attribute
        groups for personal product matching

        '
      allOf:
      - $ref: '#/components/schemas/product_base'
      - $ref: '#/components/schemas/product_misc'
      - $ref: '#/components/schemas/product_tags'
      - $ref: '#/components/schemas/product_images'
      - $ref: '#/components/schemas/product_ecoscore'
      - $ref: '#/components/schemas/product_ingredients'
      - $ref: '#/components/schemas/product_nutrition'
      - $ref: '#/components/schemas/product_quality'
      - $ref: '#/components/schemas/product_extended'
      - $ref: '#/components/schemas/product_meta'
      - $ref: '#/components/schemas/product_knowledge_panels'
      - $ref: '#/components/schemas/product_attribute_groups'
    get_product_by_barcode:
      x-stoplight:
        id: cfk5obotr63sa
      type: object
      allOf:
      - $ref: '#/components/schemas/get_product_by_barcode_base'
      - type: object
        properties:
          product:
            type: object
            allOf:
            - $ref: '#/components/schemas/product'
    ocr_on_product:
      type: object
      properties:
        status:
          type: integer
          example: 1
    crop_a_photo:
      type: object
      description: 'Select a photo and optionally crop/rotate it.

        The origin of the cropping coordinates is the top-left corner.

        Note that rotation is applied *before* cropping, so the cropping bounding
        box

        is relative to the rotated image.

        '
      required:
      - id
      - code
      - imgid
      properties:
        code:
          type: string
          description: Barcode of the product.
          example: 04963406
        imgid:
          type: integer
          description: identifier of the image to select, it should be a number
          example: 2
        id:
          type: string
          description: 'identifier of the selected image field, should be in the format

            `{IMAGE_TYPE}_{LANG}` format, where `IMAGE_TYPE` is one of

            `front|ingredients|nutrition|packaging|other` and `LANG` is the 2 letter

            language code.

            Note that if you select an image for the main language of the product
            (ex:

            `ingredients_it` if `it` is the main language), this image will be

            displayed on Product Opener for all languages (ex: on

            `https://fr.openfoodfacts.org`, unless `ingredients_fr` exists).

            '
          example: front_en
        x1:
          type: integer
          example: 0
          description: X origin coordinate of the crop, it must be lower than x2
        y1:
          type: integer
          example: 0
          description: Y origin coordinate of the crop, it must be lower than y2
        x2:
          type: integer
          example: 145
          description: X end coordinate of the crop, it must be higher than x1
        y2:
          type: integer
          example: 145
          description: Y end coordinate of the crop, it must be higher than y1
        angle:
          type: integer
          example: 0
          description: 'angle of the rotation to apply on the selected image.

            passing `90` as value rotate the image 90 degrees counter-clockwise.

            '
        normalize:
          type: string
          example: 'false'
          description: whether the selected image should be normalized using ImageMagick
          enum:
          - 'true'
          - 'false'
        white_magic:
          type: string
          default: 'false'
          description: 'whether the source image should be white magiced (background
            removal) using

            ImageMagick.

            '
          enum:
          - 'true'
          - 'false'
    rotate_a_photo:
      type: object
      properties:
        status:
          type: string
          example: status ok
        imagefield:
          type: string
          example: nutrition_fr
        image:
          type: object
          properties:
            display_url:
              type: string
              example: nutrition_fr.67.400.jpg
    unselect_a_photo:
      type: object
      properties:
        code:
          type: string
          description: code of the product
          example: '4251105501381'
        id:
          type: string
          description: image field (image id) of the photo to unselect
          example: front_fr
    combined_add_or_edit_a_product_and_change_ref_properties:
      type: object
      description: 'Combines properties of add_or_edit_a_product and change_ref_properties'
      properties:
        code:
          type: string
          description: The barcode of the product to be added or edited
          example: '0074570036004'
        user_id:
          type: string
          description: A valid username.
          example: myusername
        password:
          type: string
          description: A valid corresponding password.
          example: mypassword
        comment:
          type: string
          description: "A comment for the change. It will be shown in product changes history."
          example: new packaging from super-app
        brands:
          type: array
          items:
            type: string
          style: form
          explode: false
          description: The brands of the product (comma separated list of values).
          example: "Häagen-Dazs,General-mills"
        labels:
          type: array
          items:
            type: string
          style: form
          explode: false
          description: The labels of the product (comma separated list of values).
          example: Kosher, Ferrero
        categories:
          type: array
          items:
            type: string
          style: form
          explode: false
          description: The categories of the product (comma separated list of values).
          example: Desserts, Frozen foods
        packaging:
          type: string
          description: 'Packaging type, format, material. The [v3 API documentation](https://openfoodfacts.github.io/openfoodfacts-server/api/ref-v3/#operation/post-api-v3-product-barcode) has a more structured data for `packaging`.'
          example: Frozen
        app_name:
          type: string
          description: 'Name of the app providing the information'
        app_version:
          type: string
          description: 'Version of the app providing the information'
        app_uuid:
          type: string
          description: 'When an app uses a single user to log its contributions, it might be interesting to know which user of the app is providing the information. You can use this field to provide an identifier (e.g., a SHA1 of the username) that is privacy preserving. Make sure that your salt is strong, perfectly random, and secret. In case we have trouble with one of your users, it helps our moderators revert edits.'
        user_agent:
          type: string
          description: 'It is required that you pass a specific User-Agent header when you do an API request. In some cases, where modification is not possible (e.g., JavaScript in a browser), you can use this parameter.'
      required:
      - code
      - user_id
      - password
      - imagefield
    add_or_edit_a_product:
      type: object
      description: 'You can provide most of the properties defined in the product
        schema.

        '
      properties:
        code:
          type: string
          description: The barcode of the product to be added or edited
          example: '0074570036004'
        user_id:
          type: string
          description: A valid username.
          example: myusername
        password:
          type: string
          description: A valid corresponding password.
          example: mypassword
        comment:
          type: string
          description: "A\_comment for the change. It will be shown in product changes\
            \ history."
          example: new packaging from super-app
        brands:
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          description: The brands of the product (comma separated list of values).
          example: "H\xE4agen-Dazs,General-mills"
        labels:
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          description: The labels of the product (comma separated list of values).
          example: Kosher,Ferroro
        categories:
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          description: The categories of the product (comma separated list of values).
          example: Desserts,Frozen foods
        packaging:
          type: string
          description: 'Packaging type, format, material.

            The [v3 API documentation](https://openfoodfacts.github.io/openfoodfacts-server/api/ref-v3/#operation/post-api-v3-product-barcode)

            has a more structured data for `packaging`.

            '
          example: Frozen
      required:
      - code
      - user_id
      - password
    change_ref_properties:
      type: object
      description: 'Properties that goes in change ref

        '
      properties:
        comment:
          type: string
          description: 'A comment on the contribution.

            Adding meaningful comments help moderators and users understand a single
            product history.

            '
        app_name:
          type: string
          description: 'Name of the app providing the information

            '
        app_version:
          type: string
          description: 'Version of the app providing the information

            '
        app_uuid:
          type: string
          description: 'When an app uses a single user to log its contributions,

            it might be interesting to know which user of the app is providing the
            information.

            You can use this field to provide an identifier (eg: an sha1 of the username)
            that''s privacy preserving. Make sure that your salt is strong, perfectly
            random and secret


            In case we have trouble with one of your user, it helps our moderators
            revert edits.

            '
        User-Agent:
          type: string
          description: 'It is required that you pass a specific User-Agent header
            when you do an API request.

            But some times it''s not possible to modify such a header

            (eg. request using JavaScript in a browser).

            In such cases, you can override it with this parameter.

            '
    search_for_products:
      type: object
      properties:
        count:
          type: integer
          description: 'Total number of products found

            '
          example: 2701
        page:
          type: integer
          description: 'Page number of returned results.


            You can get a different page, by using the `page` query parameter.

            '
          example: 1
        page_count:
          type: integer
          description: 'Number of products in this page.


            This will differ from page_size only on the last page.

            '
          example: 24
        page_size:
          type: integer
          description: 'Requested number of products per pages


            To get the number of pages, divide count by page_size

            (eg. `Math.floor( count / page_size) + 1 `)

            '
          example: 24
        products:
          type: array
          description: 'The products matching the query corresponding to current page

            '
          items:
            $ref: '#/components/schemas/product'
        skip:
          type: integer
          example: 0
    nutrient_unit:
      description: "The unit in which the nutrient for 100g or per serving is measured.\n\
        \nThe possible values depends on the nutrient.\n\n* `g` for grams\n* `mg`\
        \ for milligrams\n* `\u03BCg` for micrograms\n* `cl` for centiliters\n* `ml`\
        \ for mililiters\n* `dv` for recommended daily intakes (aka [Dietary Reference\
        \ Intake](https://en.wikipedia.org/wiki/Dietary_Reference_Intake))\n* `% vol`\
        \ for percentage per volume (e.g. alcohol vol per 100 ml)\n* `%` for percentage\n\
        \n\U0001F913 code: see the [Units module][units-module],\nand [Food:default_unit_for_nid\
        \ function][default-unit]\n\n[units-module]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Units.html\n\
        [default-unit]: https://openfoodfacts.github.io/openfoodfacts-server/dev/ref-perl-pod/ProductOpener/Food.html#default_unit_for_nid_(_%24nid)\n"
      type: string
      enum:
      - g
      - mg
      - "\u03BCg"
      - cl
      - ml
      - dv
      - '% vol'
      - '%'
    nutrients:
      type: array
      description: 'Nutrients and sub-nutrients of a product, with their name and
        default unit.

        '
      items:
        type: object
        properties:
          id:
            type: string
            description: id of the nutrient
          name:
            type: string
            description: Name of the nutrient in the requested language
          important:
            type: boolean
            description: Indicates if the nutrient is always shown on the nutrition
              facts table
          display_in_edit_form:
            type: boolean
            description: Indicates if the nutrient should be shown in the nutrition
              facts edit form
          unit:
            description: Default unit of the nutrient
            $ref: '#/components/schemas/nutrient_unit'
          nutrients:
            description: 'Sub-nutrients (e.g. saturated-fat is a sub-nutrient of fat).

              '
    get_nutrients:
      $ref: '#/components/schemas/nutrients'
    get_attribute_groups:
      type: array
      description: 'List of groups of attributes for personal search in a specific
        language.

        '
      items:
        type: object
        properties:
          id:
            type: string
            description: unique id of the group
          name:
            type: string
            description: Name of the group
          attributes:
            type: array
            description: 'Attributes that are part of this group

              '
            items:
              type: object
              properties:
                id:
                  type: string
                  description: unique id of the attribute
                name:
                  type: string
                  description: Name of the attribute
                icon_url:
                  type: string
                  description: url of icon to display next to the settings for this
                    attribute
                setting_name:
                  type: string
                  description: a description of the attribute to display to users
                setting_note:
                  type: string
                  description: a complementary note on the attribute
                default:
                  type: string
                  enum:
                  - mandatory
                  - very_important
                  - important
                  - not_important
                  description: Indicates the default setting for this attribute
                panel_id:
                  type: string
                  description: Linked knowledge panel (optional)
    get_preferences:
      type: array
      description: 'Rules to apply to compute personal ranking of a product,

        based upon the setting value of each attribute.

        '
      items:
        type: object
        properties:
          id:
            type: string
            description: id for the setting value
            enum:
            - not_important
            - important
            - very_important
            - mandatory
          name:
            type: string
            description: name for the setting value, translated according to `lc`
              parameter
          factor:
            type: integer
            description: 'factor to apply to the property of the product corresponding
              to attributes

              having this setting value

              '
          minimum_match:
            type: integer
            description: 'FIXME

              '
  parameters:
    id:
      schema:
        type: string
        example: ingredients_en
      in: query
      name: id
      required: true
    cc:
      schema:
        type: string
        example: us
      in: query
      name: cc
      required: false
      description: 2 letter code of the country of the user. Used for localizing some
        fields in returned values (e.g. knowledge panels). If not passed, the country
        may be inferred by the IP address of the request.
    lc:
      schema:
        type: string
        example: fr
      in: query
      name: lc
      required: false
      description: '2 letter code of the language of the user.

        Used for localizing some fields in returned values (e.g. knowledge panels).

        If not passed, the language may be inferred by the Accept-Language header
        of the request,

        or from the domain name prefix.

        '
    code:
      schema:
        type: string
        example: '4251105501381'
      in: query
      name: code
      description: Barcode of the product
      required: true
    process_image:
      schema:
        type: string
        example: '1'
      in: query
      name: process_image
      required: true
    ocr_engine:
      schema:
        type: string
        example: google_cloud_vision
      in: query
      name: ocr_engine
      required: true
    imgid:
      schema:
        type: string
        example: '1'
      in: query
      name: imgid
      required: true
    angle:
      schema:
        type: string
        example: '90'
      in: query
      name: angle
      required: true
    page:
      schema:
        type: integer
        example: 24
      in: query
      name: page
      description: 'The page number you request to view (eg. in search results spanning
        multiple pages)

        '
    page_size:
      schema:
        type: integer
        example: 24
      in: query
      name: page_size
      description: 'The number of elements should be sent per page

        '
    sort_by:
      schema:
        type: string
        example: product_name
        enum:
        - product_name
        - last_modified_t
        - scans_n
        - unique_scans_n
        - created_t
        - completeness
        - popularity_key
        - nutriscore_score
        - nova_score
        - nothing
        - ecoscore_score
      in: query
      name: sort_by
      description: "The allowed values  used to sort/order the search results.\n\n\
        * `product_name` sorts on name\n* `ecoscore_score`, `nova_score`, `nutriscore_score`\
        \ rank on the [Eco-Score](https://world.openfoodfacts.org/eco-score-the-environmental-impact-of-food-products),\
        \ [Nova](https://world.openfoodfacts.org/nova), or [Nutri-Score](https://world.openfoodfacts.org/nutriscore)\n\
        * `scans_n`, `unique_scans_n` and `popularity_key` are about product popularity:\_\
        number of scans on unique scans, rank of product\n* `created_t`, `last_modified_t`,\
        \ are about creation and modification dates\n* `nothing`, tells not to sort\
        \ at all (because if you do not provide the sort_by argument we default to\
        \ sorting on popularity (for food) or last modification date)\n"
    fields:
      schema:
        type: string
        example: code,product_name
      in: query
      name: fields
      description: 'The fields to be returned from the product object can also be
        limited.

        If not specified, it returns the entire product object response.

        '
    knowledge_panels_included:
      schema:
        type: string
        example: heatlh_card, environment_card
      in: query
      name: knowledge_panels_included
      description: 'When knowledge_panels are requested, you can specify which panels
        should be in the response. All the others will be excluded.

        '
    knowledge_panels_excluded:
      schema:
        type: string
        example: heatlh_card, environment_card
      in: query
      name: knowledge_panels_excluded
      description: 'When knowledge_panels are requested, you can specify which panels
        to exclude from the response. All the others will be included.

        If a panel is both excluded and included (with the knowledge_panels_excluded
        parameter), it will be excluded.

        '
    tagtype:
      schema:
        type: string
        example: additives
      in: query
      name: tagtype
    term:
      schema:
        type: string
        example: f
      in: query
      name: term
    tags_parameters_properties_additives_tags:
      style: form
      explode: false
      schema:
        type: string
        example: e322
      in: query
      name: additives_tags
      description: 'The additives_tags in english of product(s) you are searching
        for.

        The [OFF App](https://world.openfoodfacts.org/additives) has a list of possible
        values for `additives`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_allergens_tags:
      style: form
      explode: false
      schema:
        type: string
        example: m
      in: query
      name: allergens_tags
      description: 'The allergens_tags in english of product(s) you are searching
        for.

        The [OFF App](https://world.openfoodfacts.org/allergens) has a list of possible
        values for `allergens`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_brands_tags:
      style: form
      explode: false
      schema:
        type: string
        example: ferrero
      in: query
      name: brands_tags
      description: 'The brands_tags of product(s) you are searching for.

        The [OFF App](https://world.openfoodfacts.org/brands) has a list of possible
        values for `brands`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_categories_tags:
      style: form
      explode: false
      schema:
        type: string
        example: chocolates
      in: query
      name: categories_tags
      description: 'The category of product(s) you are searching for.

        The [OFF App](https://world.openfoodfacts.org/categories) has a list of possible
        values for `categories`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_countries_tags:
      style: form
      explode: false
      schema:
        type: string
        example: united-kingdom
      in: query
      name: countries_tags_en
      description: 'The countries_tags_en of product(s) you are searching for.

        The [OFF App](https://world.openfoodfacts.org/countries) shows a list of possible
        values for `countries`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_emb_codes_tags:
      style: form
      explode: false
      schema:
        type: string
      in: query
      name: emb_codes_tags
      description: 'The emb_codes_tags of product(s) you are searching for.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_labels_tags:
      style: form
      explode: false
      schema:
        type: string
        example: organic
      in: query
      name: labels_tags
      description: 'The labels_tags in english of product(s) you are searching for.

        The [OFF App](https://world.openfoodfacts.org/labels) has a list of possible
        values for `labels`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_manufacturing_places_tags:
      style: form
      explode: false
      schema:
        type: string
      in: query
      name: manufacturing_places_tags
      description: 'The manufacturing_places_tags of product(s) you are searching
        for.

        The [OFF App](https://world.openfoodfacts.org/manufacturing-places) has a
        list of possible values for `manufacturing-places`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_nutrition_grades_tags:
      style: form
      explode: false
      schema:
        type: string
        example: e
      in: query
      name: nutrition_grades_tags
      description: 'The nutrition_grades_tags of product(s) you are searching for.

        The [OFF App](https://world.openfoodfacts.org/nutrition-grades) has a list
        of possible values for `nutrition-grades`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_origins_tags:
      style: form
      explode: false
      schema:
        type: string
      in: query
      name: origins_tags
      description: 'The origins_tags of product(s) you are searching for.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_packaging_tags:
      style: form
      explode: false
      schema:
        type: string
        example: 1-jar-aus-klarglas
      in: query
      name: packaging_tags_de
      description: 'The packaging_tag in german of product(s) you are searching for.

        The [OFF App](https://world.openfoodfacts.org/packaging) has a list of possible
        values for `packaging`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_purchase_places_tags:
      style: form
      explode: false
      schema:
        type: string
      in: query
      name: purchase_places_tags
      description: 'The purchase_places_tags of product(s) you are searching for.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_states_tags:
      style: form
      explode: false
      schema:
        type: string
        example: nutrition-facts-completed
      in: query
      name: states_tags
      description: 'The states_tags in english of product(s) you are searching for.

        The [OFF App](https://world.openfoodfacts.org/states) has a list of possible
        values for `states`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_stores_tags:
      style: form
      explode: false
      schema:
        type: string
        example: aldi
      in: query
      name: stores_tags
      description: 'The stores_tags of product(s) you are searching for.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_traces_tags:
      style: form
      explode: false
      schema:
        type: string
      in: query
      name: traces_tags
      description: 'The traces_tags of product(s) you are searching for.

        The [OFF App](https://world.openfoodfacts.org/traces) shows a list of possible
        values for `traces`.


        You can use multiple values by using a comma separated list.

        You can add a "-" before values to avoid matching a tag.

        '
    tags_parameters_properties_tag_name_with_language_code:
      in: query
      name: <tag_name>_tags_<language_code>
      description: 'You can add a language code to a specific tag to query it in a
        specific language

        '
      style: form
      explode: false
      schema:
        type: object
        examples:
        - packaging_tags_de: null
          summary: packaging in german
          value:
            packaging_tags_de: de:Flasche
        - origins_tags_fr: null
          summary: origins in french
          value:
            origins_tags_fr: fr:France
        - categories_tags_en: null
          summary: categories in english
          value:
            categories_tags_en: en:Beer
        properties:
          tag_name_example:
            type: string
            description: 'Will search in the tags corresponding to `tag_name`,

              in the language corresponding to `language_code.


              `tag_name` is one of the field above which have the `_tags`` suffix:

              categories, nutrition_grades, etc.


              `language_code` is a two letter iso language `language_code.


              You can use multiple values by using a comma separated list.

              You can add a "-" before values to avoid matching a tag.

              '
    nutrition_search_properties_nutrient_lower_than:
      in: query
      name: <nutrient>_lt_<value>
      description: 'Search on nutrient lower than a value

        '
      schema:
        type: object
        examples:
        - salt_100g_lt_2: null
          summary: salt per 100g is lower than 2g (in product as sold)
          value:
            salt_100g<2: 1
        properties:
          nutrient_example:
            type: string
            description: 'Will search for products with nutrients lower than  `value`

              per `portion` (100g or serving).


              If `prepared` is "prepared" search in prepared product instead of "as
              sold".


              Important: the parameter value is discarded and should be empty

              '
    nutrition_search_properties_nutrient_greater_than:
      in: query
      name: <nutrient>_gt_<value>
      description: 'Search on nutrient greater than a value

        '
      schema:
        type: object
        examples:
        - carbohydrates_prepared_serving_gt_10: null
          summary: carbohydrates per serving is greater than 10g in prepared product
          value:
            salt_100g>10: 1
        properties:
          nutrient_example:
            type: string
            description: 'Will search for products with nutrients more than  `value`

              per `portion` (100g or serving).


              If `prepared` is "prepared" search in prepared product instead of "as
              sold".


              Important: the parameter value is discarded and should be empty

              '
    nutrition_search_properties_nutrient_equal:
      in: query
      name: <nutrient>_eq_<value>
      description: 'Search on nutrient for an exact quantity

        '
      schema:
        type: object
        examples:
        - fat_100g_eq_5: null
          summary: fat per 100g is exactly equal to 5g (in product as sold)
          value:
            fat_100g: 5
        properties:
          nutrient_example:
            type: string
            description: 'Will search for products with nutrients exactl  the parameter
              value

              per `portion` (100g or serving).


              If `prepared` is "prepared" search in prepared product instead of "as
              sold".

              '
tags:
- name: Read Requests
- name: Write Requests
